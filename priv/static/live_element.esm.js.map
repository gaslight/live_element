{
  "version": 3,
  "sources": ["../../assets/node_modules/phoenix/priv/static/phoenix.js", "../../assets/js/live_element/constants.js", "../../assets/js/live_element/entry_uploader.js", "../../assets/js/live_element/utils.js", "../../assets/js/live_element/browser.js", "../../assets/js/live_element/dom.js", "../../assets/js/live_element/upload_entry.js", "../../assets/js/live_element/live_uploader.js", "../../assets/js/live_element/hooks.js", "../../assets/js/live_element/dom_post_morph_restorer.js", "../../assets/node_modules/morphdom/dist/morphdom-esm.js", "../../assets/js/live_element/dom_patch.js", "../../assets/js/live_element/rendered.js", "../../assets/js/live_element/view_hook.js", "../../assets/js/live_element/view.js", "../../assets/js/live_element/js.js", "../../assets/js/live_element/live_socket.js", "../../assets/node_modules/@lit/reactive-element/src/css-tag.ts", "../../assets/node_modules/@lit/reactive-element/src/reactive-element.ts", "../../assets/node_modules/lit-html/src/lit-html.ts", "../../assets/node_modules/lit-element/src/lit-element.ts", "../../assets/js/live_element/LiveElement.js"],
  "sourcesContent": ["!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.Phoenix=t():e.Phoenix=t()}(this,(function(){return function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t,n){(function(t){e.exports=t.Phoenix=n(2)}).call(this,n(1))},function(e,t){var n;n=function(){return this}();try{n=n||new Function(\"return this\")()}catch(e){\"object\"==typeof window&&(n=window)}e.exports=n},function(e,t,n){\"use strict\";function i(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||s(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function o(e){return(o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function r(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(\"undefined\"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],i=!0,o=!1,r=void 0;try{for(var s,a=e[Symbol.iterator]();!(i=(s=a.next()).done)&&(n.push(s.value),!t||n.length!==t);i=!0);}catch(e){o=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(o)throw r}}return n}(e,t)||s(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function s(e,t){if(e){if(\"string\"==typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(n):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,t):void 0}}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function c(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function u(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function h(e,t,n){return t&&u(e.prototype,t),n&&u(e,n),e}n.r(t),n.d(t,\"Channel\",(function(){return _})),n.d(t,\"Serializer\",(function(){return H})),n.d(t,\"Socket\",(function(){return U})),n.d(t,\"LongPoll\",(function(){return D})),n.d(t,\"Ajax\",(function(){return M})),n.d(t,\"Presence\",(function(){return N}));var l=\"undefined\"!=typeof self?self:null,f=\"undefined\"!=typeof window?window:null,d=l||f||void 0,p=0,v=1,y=2,m=3,g=\"closed\",k=\"errored\",b=\"joined\",j=\"joining\",C=\"leaving\",E=\"phx_close\",R=\"phx_error\",T=\"phx_join\",S=\"phx_reply\",w=\"phx_leave\",A=[E,R,T,S,w],L=\"longpoll\",x=\"websocket\",O=function(e){if(\"function\"==typeof e)return e;return function(){return e}},P=function(){function e(t,n,i,o){c(this,e),this.channel=t,this.event=n,this.payload=i||function(){return{}},this.receivedResp=null,this.timeout=o,this.timeoutTimer=null,this.recHooks=[],this.sent=!1}return h(e,[{key:\"resend\",value:function(e){this.timeout=e,this.reset(),this.send()}},{key:\"send\",value:function(){this.hasReceived(\"timeout\")||(this.startTimeout(),this.sent=!0,this.channel.socket.push({topic:this.channel.topic,event:this.event,payload:this.payload(),ref:this.ref,join_ref:this.channel.joinRef()}))}},{key:\"receive\",value:function(e,t){return this.hasReceived(e)&&t(this.receivedResp.response),this.recHooks.push({status:e,callback:t}),this}},{key:\"reset\",value:function(){this.cancelRefEvent(),this.ref=null,this.refEvent=null,this.receivedResp=null,this.sent=!1}},{key:\"matchReceive\",value:function(e){var t=e.status,n=e.response;e.ref;this.recHooks.filter((function(e){return e.status===t})).forEach((function(e){return e.callback(n)}))}},{key:\"cancelRefEvent\",value:function(){this.refEvent&&this.channel.off(this.refEvent)}},{key:\"cancelTimeout\",value:function(){clearTimeout(this.timeoutTimer),this.timeoutTimer=null}},{key:\"startTimeout\",value:function(){var e=this;this.timeoutTimer&&this.cancelTimeout(),this.ref=this.channel.socket.makeRef(),this.refEvent=this.channel.replyEventName(this.ref),this.channel.on(this.refEvent,(function(t){e.cancelRefEvent(),e.cancelTimeout(),e.receivedResp=t,e.matchReceive(t)})),this.timeoutTimer=setTimeout((function(){e.trigger(\"timeout\",{})}),this.timeout)}},{key:\"hasReceived\",value:function(e){return this.receivedResp&&this.receivedResp.status===e}},{key:\"trigger\",value:function(e,t){this.channel.trigger(this.refEvent,{status:e,response:t})}}]),e}(),_=function(){function e(t,n,i){var o=this;c(this,e),this.state=g,this.topic=t,this.params=O(n||{}),this.socket=i,this.bindings=[],this.bindingRef=0,this.timeout=this.socket.timeout,this.joinedOnce=!1,this.joinPush=new P(this,T,this.params,this.timeout),this.pushBuffer=[],this.stateChangeRefs=[],this.rejoinTimer=new J((function(){o.socket.isConnected()&&o.rejoin()}),this.socket.rejoinAfterMs),this.stateChangeRefs.push(this.socket.onError((function(){return o.rejoinTimer.reset()}))),this.stateChangeRefs.push(this.socket.onOpen((function(){o.rejoinTimer.reset(),o.isErrored()&&o.rejoin()}))),this.joinPush.receive(\"ok\",(function(){o.state=b,o.rejoinTimer.reset(),o.pushBuffer.forEach((function(e){return e.send()})),o.pushBuffer=[]})),this.joinPush.receive(\"error\",(function(){o.state=k,o.socket.isConnected()&&o.rejoinTimer.scheduleTimeout()})),this.onClose((function(){o.rejoinTimer.reset(),o.socket.hasLogger()&&o.socket.log(\"channel\",\"close \".concat(o.topic,\" \").concat(o.joinRef())),o.state=g,o.socket.remove(o)})),this.onError((function(e){o.socket.hasLogger()&&o.socket.log(\"channel\",\"error \".concat(o.topic),e),o.isJoining()&&o.joinPush.reset(),o.state=k,o.socket.isConnected()&&o.rejoinTimer.scheduleTimeout()})),this.joinPush.receive(\"timeout\",(function(){o.socket.hasLogger()&&o.socket.log(\"channel\",\"timeout \".concat(o.topic,\" (\").concat(o.joinRef(),\")\"),o.joinPush.timeout),new P(o,w,O({}),o.timeout).send(),o.state=k,o.joinPush.reset(),o.socket.isConnected()&&o.rejoinTimer.scheduleTimeout()})),this.on(S,(function(e,t){o.trigger(o.replyEventName(t),e)}))}return h(e,[{key:\"join\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.timeout;if(this.joinedOnce)throw new Error(\"tried to join multiple times. 'join' can only be called a single time per channel instance\");return this.timeout=e,this.joinedOnce=!0,this.rejoin(),this.joinPush}},{key:\"onClose\",value:function(e){this.on(E,e)}},{key:\"onError\",value:function(e){return this.on(R,(function(t){return e(t)}))}},{key:\"on\",value:function(e,t){var n=this.bindingRef++;return this.bindings.push({event:e,ref:n,callback:t}),n}},{key:\"off\",value:function(e,t){this.bindings=this.bindings.filter((function(n){return!(n.event===e&&(void 0===t||t===n.ref))}))}},{key:\"canPush\",value:function(){return this.socket.isConnected()&&this.isJoined()}},{key:\"push\",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.timeout;if(t=t||{},!this.joinedOnce)throw new Error(\"tried to push '\".concat(e,\"' to '\").concat(this.topic,\"' before joining. Use channel.join() before pushing events\"));var i=new P(this,e,(function(){return t}),n);return this.canPush()?i.send():(i.startTimeout(),this.pushBuffer.push(i)),i}},{key:\"leave\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.timeout;this.rejoinTimer.reset(),this.joinPush.cancelTimeout(),this.state=C;var n=function(){e.socket.hasLogger()&&e.socket.log(\"channel\",\"leave \".concat(e.topic)),e.trigger(E,\"leave\")},i=new P(this,w,O({}),t);return i.receive(\"ok\",(function(){return n()})).receive(\"timeout\",(function(){return n()})),i.send(),this.canPush()||i.trigger(\"ok\",{}),i}},{key:\"onMessage\",value:function(e,t,n){return t}},{key:\"isLifecycleEvent\",value:function(e){return A.indexOf(e)>=0}},{key:\"isMember\",value:function(e,t,n,i){return this.topic===e&&(!i||i===this.joinRef()||!this.isLifecycleEvent(t)||(this.socket.hasLogger()&&this.socket.log(\"channel\",\"dropping outdated message\",{topic:e,event:t,payload:n,joinRef:i}),!1))}},{key:\"joinRef\",value:function(){return this.joinPush.ref}},{key:\"rejoin\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.timeout;this.isLeaving()||(this.socket.leaveOpenTopic(this.topic),this.state=j,this.joinPush.resend(e))}},{key:\"trigger\",value:function(e,t,n,i){var o=this.onMessage(e,t,n,i);if(t&&!o)throw new Error(\"channel onMessage callbacks must return the payload, modified or unmodified\");for(var r=this.bindings.filter((function(t){return t.event===e})),s=0;s<r.length;s++){r[s].callback(o,n,i||this.joinRef())}}},{key:\"replyEventName\",value:function(e){return\"chan_reply_\".concat(e)}},{key:\"isClosed\",value:function(){return this.state===g}},{key:\"isErrored\",value:function(){return this.state===k}},{key:\"isJoined\",value:function(){return this.state===b}},{key:\"isJoining\",value:function(){return this.state===j}},{key:\"isLeaving\",value:function(){return this.state===C}}]),e}(),H={HEADER_LENGTH:1,META_LENGTH:4,KINDS:{push:0,reply:1,broadcast:2},encode:function(e,t){if(e.payload.constructor===ArrayBuffer)return t(this.binaryEncode(e));var n=[e.join_ref,e.ref,e.topic,e.event,e.payload];return t(JSON.stringify(n))},decode:function(e,t){if(e.constructor===ArrayBuffer)return t(this.binaryDecode(e));var n=r(JSON.parse(e),5);return t({join_ref:n[0],ref:n[1],topic:n[2],event:n[3],payload:n[4]})},binaryEncode:function(e){var t=e.join_ref,n=e.ref,i=e.event,o=e.topic,r=e.payload,s=this.META_LENGTH+t.length+n.length+o.length+i.length,a=new ArrayBuffer(this.HEADER_LENGTH+s),c=new DataView(a),u=0;c.setUint8(u++,this.KINDS.push),c.setUint8(u++,t.length),c.setUint8(u++,n.length),c.setUint8(u++,o.length),c.setUint8(u++,i.length),Array.from(t,(function(e){return c.setUint8(u++,e.charCodeAt(0))})),Array.from(n,(function(e){return c.setUint8(u++,e.charCodeAt(0))})),Array.from(o,(function(e){return c.setUint8(u++,e.charCodeAt(0))})),Array.from(i,(function(e){return c.setUint8(u++,e.charCodeAt(0))}));var h=new Uint8Array(a.byteLength+r.byteLength);return h.set(new Uint8Array(a),0),h.set(new Uint8Array(r),a.byteLength),h.buffer},binaryDecode:function(e){var t=new DataView(e),n=t.getUint8(0),i=new TextDecoder;switch(n){case this.KINDS.push:return this.decodePush(e,t,i);case this.KINDS.reply:return this.decodeReply(e,t,i);case this.KINDS.broadcast:return this.decodeBroadcast(e,t,i)}},decodePush:function(e,t,n){var i=t.getUint8(1),o=t.getUint8(2),r=t.getUint8(3),s=this.HEADER_LENGTH+this.META_LENGTH-1,a=n.decode(e.slice(s,s+i));s+=i;var c=n.decode(e.slice(s,s+o));s+=o;var u=n.decode(e.slice(s,s+r));return s+=r,{join_ref:a,ref:null,topic:c,event:u,payload:e.slice(s,e.byteLength)}},decodeReply:function(e,t,n){var i=t.getUint8(1),o=t.getUint8(2),r=t.getUint8(3),s=t.getUint8(4),a=this.HEADER_LENGTH+this.META_LENGTH,c=n.decode(e.slice(a,a+i));a+=i;var u=n.decode(e.slice(a,a+o));a+=o;var h=n.decode(e.slice(a,a+r));a+=r;var l=n.decode(e.slice(a,a+s));a+=s;var f=e.slice(a,e.byteLength);return{join_ref:c,ref:u,topic:h,event:S,payload:{status:l,response:f}}},decodeBroadcast:function(e,t,n){var i=t.getUint8(1),o=t.getUint8(2),r=this.HEADER_LENGTH+2,s=n.decode(e.slice(r,r+i));r+=i;var a=n.decode(e.slice(r,r+o));return r+=o,{join_ref:null,ref:null,topic:s,event:a,payload:e.slice(r,e.byteLength)}}},U=function(){function e(t){var n=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};c(this,e),this.stateChangeCallbacks={open:[],close:[],error:[],message:[]},this.channels=[],this.sendBuffer=[],this.ref=0,this.timeout=i.timeout||1e4,this.transport=i.transport||d.WebSocket||D,this.defaultEncoder=H.encode.bind(H),this.defaultDecoder=H.decode.bind(H),this.closeWasClean=!1,this.unloaded=!1,this.binaryType=i.binaryType||\"arraybuffer\",this.transport!==D?(this.encode=i.encode||this.defaultEncoder,this.decode=i.decode||this.defaultDecoder):(this.encode=this.defaultEncoder,this.decode=this.defaultDecoder),f&&f.addEventListener&&f.addEventListener(\"beforeunload\",(function(e){n.conn&&(n.unloaded=!0,n.abnormalClose(\"unloaded\"))})),this.heartbeatIntervalMs=i.heartbeatIntervalMs||3e4,this.rejoinAfterMs=function(e){return i.rejoinAfterMs?i.rejoinAfterMs(e):[1e3,2e3,5e3][e-1]||1e4},this.reconnectAfterMs=function(e){return n.unloaded?100:i.reconnectAfterMs?i.reconnectAfterMs(e):[10,50,100,150,200,250,500,1e3,2e3][e-1]||5e3},this.logger=i.logger||null,this.longpollerTimeout=i.longpollerTimeout||2e4,this.params=O(i.params||{}),this.endPoint=\"\".concat(t,\"/\").concat(x),this.vsn=i.vsn||\"2.0.0\",this.heartbeatTimer=null,this.pendingHeartbeatRef=null,this.reconnectTimer=new J((function(){n.teardown((function(){return n.connect()}))}),this.reconnectAfterMs)}return h(e,[{key:\"protocol\",value:function(){return location.protocol.match(/^https/)?\"wss\":\"ws\"}},{key:\"endPointURL\",value:function(){var e=M.appendParams(M.appendParams(this.endPoint,this.params()),{vsn:this.vsn});return\"/\"!==e.charAt(0)?e:\"/\"===e.charAt(1)?\"\".concat(this.protocol(),\":\").concat(e):\"\".concat(this.protocol(),\"://\").concat(location.host).concat(e)}},{key:\"disconnect\",value:function(e,t,n){this.closeWasClean=!0,this.reconnectTimer.reset(),this.teardown(e,t,n)}},{key:\"connect\",value:function(e){var t=this;e&&(console&&console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\"),this.params=O(e)),this.conn||(this.closeWasClean=!1,this.conn=new this.transport(this.endPointURL()),this.conn.binaryType=this.binaryType,this.conn.timeout=this.longpollerTimeout,this.conn.onopen=function(){return t.onConnOpen()},this.conn.onerror=function(e){return t.onConnError(e)},this.conn.onmessage=function(e){return t.onConnMessage(e)},this.conn.onclose=function(e){return t.onConnClose(e)})}},{key:\"log\",value:function(e,t,n){this.logger(e,t,n)}},{key:\"hasLogger\",value:function(){return null!==this.logger}},{key:\"onOpen\",value:function(e){var t=this.makeRef();return this.stateChangeCallbacks.open.push([t,e]),t}},{key:\"onClose\",value:function(e){var t=this.makeRef();return this.stateChangeCallbacks.close.push([t,e]),t}},{key:\"onError\",value:function(e){var t=this.makeRef();return this.stateChangeCallbacks.error.push([t,e]),t}},{key:\"onMessage\",value:function(e){var t=this.makeRef();return this.stateChangeCallbacks.message.push([t,e]),t}},{key:\"onConnOpen\",value:function(){this.hasLogger()&&this.log(\"transport\",\"connected to \".concat(this.endPointURL())),this.unloaded=!1,this.closeWasClean=!1,this.flushSendBuffer(),this.reconnectTimer.reset(),this.resetHeartbeat(),this.stateChangeCallbacks.open.forEach((function(e){return(0,r(e,2)[1])()}))}},{key:\"resetHeartbeat\",value:function(){var e=this;this.conn&&this.conn.skipHeartbeat||(this.pendingHeartbeatRef=null,clearInterval(this.heartbeatTimer),this.heartbeatTimer=setInterval((function(){return e.sendHeartbeat()}),this.heartbeatIntervalMs))}},{key:\"teardown\",value:function(e,t,n){var i=this;if(!this.conn)return e&&e();this.waitForBufferDone((function(){i.conn&&(t?i.conn.close(t,n||\"\"):i.conn.close()),i.waitForSocketClosed((function(){i.conn&&(i.conn.onclose=function(){},i.conn=null),e&&e()}))}))}},{key:\"waitForBufferDone\",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;5!==n&&this.conn&&this.conn.bufferedAmount?setTimeout((function(){t.waitForBufferDone(e,n+1)}),150*n):e()}},{key:\"waitForSocketClosed\",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;5!==n&&this.conn&&this.conn.readyState!==m?setTimeout((function(){t.waitForSocketClosed(e,n+1)}),150*n):e()}},{key:\"onConnClose\",value:function(e){this.hasLogger()&&this.log(\"transport\",\"close\",e),this.triggerChanError(),clearInterval(this.heartbeatTimer),this.closeWasClean||this.reconnectTimer.scheduleTimeout(),this.stateChangeCallbacks.close.forEach((function(t){return(0,r(t,2)[1])(e)}))}},{key:\"onConnError\",value:function(e){this.hasLogger()&&this.log(\"transport\",e),this.triggerChanError(),this.stateChangeCallbacks.error.forEach((function(t){return(0,r(t,2)[1])(e)}))}},{key:\"triggerChanError\",value:function(){this.channels.forEach((function(e){e.isErrored()||e.isLeaving()||e.isClosed()||e.trigger(R)}))}},{key:\"connectionState\",value:function(){switch(this.conn&&this.conn.readyState){case p:return\"connecting\";case v:return\"open\";case y:return\"closing\";default:return\"closed\"}}},{key:\"isConnected\",value:function(){return\"open\"===this.connectionState()}},{key:\"remove\",value:function(e){this.off(e.stateChangeRefs),this.channels=this.channels.filter((function(t){return t.joinRef()!==e.joinRef()}))}},{key:\"off\",value:function(e){for(var t in this.stateChangeCallbacks)this.stateChangeCallbacks[t]=this.stateChangeCallbacks[t].filter((function(t){var n=r(t,1)[0];return-1===e.indexOf(n)}))}},{key:\"channel\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=new _(e,t,this);return this.channels.push(n),n}},{key:\"push\",value:function(e){var t=this;if(this.hasLogger()){var n=e.topic,i=e.event,o=e.payload,r=e.ref,s=e.join_ref;this.log(\"push\",\"\".concat(n,\" \").concat(i,\" (\").concat(s,\", \").concat(r,\")\"),o)}this.isConnected()?this.encode(e,(function(e){return t.conn.send(e)})):this.sendBuffer.push((function(){return t.encode(e,(function(e){return t.conn.send(e)}))}))}},{key:\"makeRef\",value:function(){var e=this.ref+1;return e===this.ref?this.ref=0:this.ref=e,this.ref.toString()}},{key:\"sendHeartbeat\",value:function(){if(this.isConnected()){if(this.pendingHeartbeatRef)return this.pendingHeartbeatRef=null,this.hasLogger()&&this.log(\"transport\",\"heartbeat timeout. Attempting to re-establish connection\"),void this.abnormalClose(\"heartbeat timeout\");this.pendingHeartbeatRef=this.makeRef(),this.push({topic:\"phoenix\",event:\"heartbeat\",payload:{},ref:this.pendingHeartbeatRef})}}},{key:\"abnormalClose\",value:function(e){this.closeWasClean=!1,this.conn.readyState===v&&this.conn.close(1e3,e)}},{key:\"flushSendBuffer\",value:function(){this.isConnected()&&this.sendBuffer.length>0&&(this.sendBuffer.forEach((function(e){return e()})),this.sendBuffer=[])}},{key:\"onConnMessage\",value:function(e){var t=this;this.decode(e.data,(function(e){var n=e.topic,i=e.event,o=e.payload,s=e.ref,a=e.join_ref;s&&s===t.pendingHeartbeatRef&&(t.pendingHeartbeatRef=null),t.hasLogger()&&t.log(\"receive\",\"\".concat(o.status||\"\",\" \").concat(n,\" \").concat(i,\" \").concat(s&&\"(\"+s+\")\"||\"\"),o);for(var c=0;c<t.channels.length;c++){var u=t.channels[c];u.isMember(n,i,o,a)&&u.trigger(i,o,s,a)}for(var h=0;h<t.stateChangeCallbacks.message.length;h++){(0,r(t.stateChangeCallbacks.message[h],2)[1])(e)}}))}},{key:\"leaveOpenTopic\",value:function(e){var t=this.channels.find((function(t){return t.topic===e&&(t.isJoined()||t.isJoining())}));t&&(this.hasLogger()&&this.log(\"transport\",'leaving duplicate topic \"'.concat(e,'\"')),t.leave())}}]),e}(),D=function(){function e(t){c(this,e),this.endPoint=null,this.token=null,this.skipHeartbeat=!0,this.onopen=function(){},this.onerror=function(){},this.onmessage=function(){},this.onclose=function(){},this.pollEndpoint=this.normalizeEndpoint(t),this.readyState=p,this.poll()}return h(e,[{key:\"normalizeEndpoint\",value:function(e){return e.replace(\"ws://\",\"http://\").replace(\"wss://\",\"https://\").replace(new RegExp(\"(.*)/\"+x),\"$1/\"+L)}},{key:\"endpointURL\",value:function(){return M.appendParams(this.pollEndpoint,{token:this.token})}},{key:\"closeAndRetry\",value:function(){this.close(),this.readyState=p}},{key:\"ontimeout\",value:function(){this.onerror(\"timeout\"),this.closeAndRetry()}},{key:\"poll\",value:function(){var e=this;this.readyState!==v&&this.readyState!==p||M.request(\"GET\",this.endpointURL(),\"application/json\",null,this.timeout,this.ontimeout.bind(this),(function(t){if(t){var n=t.status,i=t.token,o=t.messages;e.token=i}else n=0;switch(n){case 200:o.forEach((function(t){return e.onmessage({data:t})})),e.poll();break;case 204:e.poll();break;case 410:e.readyState=v,e.onopen(),e.poll();break;case 403:e.onerror(),e.close();break;case 0:case 500:e.onerror(),e.closeAndRetry();break;default:throw new Error(\"unhandled poll status \".concat(n))}}))}},{key:\"send\",value:function(e){var t=this;M.request(\"POST\",this.endpointURL(),\"application/json\",e,this.timeout,this.onerror.bind(this,\"timeout\"),(function(e){e&&200===e.status||(t.onerror(e&&e.status),t.closeAndRetry())}))}},{key:\"close\",value:function(e,t){this.readyState=m,this.onclose()}}]),e}(),M=function(){function e(){c(this,e)}return h(e,null,[{key:\"request\",value:function(e,t,n,i,o,r,s){if(d.XDomainRequest){var a=new XDomainRequest;this.xdomainRequest(a,e,t,i,o,r,s)}else{var c=new d.XMLHttpRequest;this.xhrRequest(c,e,t,n,i,o,r,s)}}},{key:\"xdomainRequest\",value:function(e,t,n,i,o,r,s){var a=this;e.timeout=o,e.open(t,n),e.onload=function(){var t=a.parseJSON(e.responseText);s&&s(t)},r&&(e.ontimeout=r),e.onprogress=function(){},e.send(i)}},{key:\"xhrRequest\",value:function(e,t,n,i,o,r,s,a){var c=this;e.open(t,n,!0),e.timeout=r,e.setRequestHeader(\"Content-Type\",i),e.onerror=function(){a&&a(null)},e.onreadystatechange=function(){if(e.readyState===c.states.complete&&a){var t=c.parseJSON(e.responseText);a(t)}},s&&(e.ontimeout=s),e.send(o)}},{key:\"parseJSON\",value:function(e){if(!e||\"\"===e)return null;try{return JSON.parse(e)}catch(t){return console&&console.log(\"failed to parse JSON response\",e),null}}},{key:\"serialize\",value:function(e,t){var n=[];for(var i in e)if(e.hasOwnProperty(i)){var r=t?\"\".concat(t,\"[\").concat(i,\"]\"):i,s=e[i];\"object\"===o(s)?n.push(this.serialize(s,r)):n.push(encodeURIComponent(r)+\"=\"+encodeURIComponent(s))}return n.join(\"&\")}},{key:\"appendParams\",value:function(e,t){if(0===Object.keys(t).length)return e;var n=e.match(/\\?/)?\"&\":\"?\";return\"\".concat(e).concat(n).concat(this.serialize(t))}}]),e}();M.states={complete:4};var N=function(){function e(t){var n=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};c(this,e);var o=i.events||{state:\"presence_state\",diff:\"presence_diff\"};this.state={},this.pendingDiffs=[],this.channel=t,this.joinRef=null,this.caller={onJoin:function(){},onLeave:function(){},onSync:function(){}},this.channel.on(o.state,(function(t){var i=n.caller,o=i.onJoin,r=i.onLeave,s=i.onSync;n.joinRef=n.channel.joinRef(),n.state=e.syncState(n.state,t,o,r),n.pendingDiffs.forEach((function(t){n.state=e.syncDiff(n.state,t,o,r)})),n.pendingDiffs=[],s()})),this.channel.on(o.diff,(function(t){var i=n.caller,o=i.onJoin,r=i.onLeave,s=i.onSync;n.inPendingSyncState()?n.pendingDiffs.push(t):(n.state=e.syncDiff(n.state,t,o,r),s())}))}return h(e,[{key:\"onJoin\",value:function(e){this.caller.onJoin=e}},{key:\"onLeave\",value:function(e){this.caller.onLeave=e}},{key:\"onSync\",value:function(e){this.caller.onSync=e}},{key:\"list\",value:function(t){return e.list(this.state,t)}},{key:\"inPendingSyncState\",value:function(){return!this.joinRef||this.joinRef!==this.channel.joinRef()}}],[{key:\"syncState\",value:function(e,t,n,i){var o=this,r=this.clone(e),s={},a={};return this.map(r,(function(e,n){t[e]||(a[e]=n)})),this.map(t,(function(e,t){var n=r[e];if(n){var i=t.metas.map((function(e){return e.phx_ref})),c=n.metas.map((function(e){return e.phx_ref})),u=t.metas.filter((function(e){return c.indexOf(e.phx_ref)<0})),h=n.metas.filter((function(e){return i.indexOf(e.phx_ref)<0}));u.length>0&&(s[e]=t,s[e].metas=u),h.length>0&&(a[e]=o.clone(n),a[e].metas=h)}else s[e]=t})),this.syncDiff(r,{joins:s,leaves:a},n,i)}},{key:\"syncDiff\",value:function(e,t,n,o){var r=t.joins,s=t.leaves,a=this.clone(e);return n||(n=function(){}),o||(o=function(){}),this.map(r,(function(e,t){var o=a[e];if(a[e]=t,o){var r,s=a[e].metas.map((function(e){return e.phx_ref})),c=o.metas.filter((function(e){return s.indexOf(e.phx_ref)<0}));(r=a[e].metas).unshift.apply(r,i(c))}n(e,o,t)})),this.map(s,(function(e,t){var n=a[e];if(n){var i=t.metas.map((function(e){return e.phx_ref}));n.metas=n.metas.filter((function(e){return i.indexOf(e.phx_ref)<0})),o(e,n,t),0===n.metas.length&&delete a[e]}})),a}},{key:\"list\",value:function(e,t){return t||(t=function(e,t){return t}),this.map(e,(function(e,n){return t(e,n)}))}},{key:\"map\",value:function(e,t){return Object.getOwnPropertyNames(e).map((function(n){return t(n,e[n])}))}},{key:\"clone\",value:function(e){return JSON.parse(JSON.stringify(e))}}]),e}(),J=function(){function e(t,n){c(this,e),this.callback=t,this.timerCalc=n,this.timer=null,this.tries=0}return h(e,[{key:\"reset\",value:function(){this.tries=0,clearTimeout(this.timer)}},{key:\"scheduleTimeout\",value:function(){var e=this;clearTimeout(this.timer),this.timer=setTimeout((function(){e.tries=e.tries+1,e.callback()}),this.timerCalc(this.tries+1))}}]),e}()}])}));", "\nexport const CONSECUTIVE_RELOADS = \"consecutive-reloads\"\nexport const MAX_RELOADS = 10\nexport const RELOAD_JITTER = [1000, 3000]\nexport const FAILSAFE_JITTER = 30000\nexport const PHX_EVENT_CLASSES = [\n  \"phx-click-loading\", \"phx-change-loading\", \"phx-submit-loading\",\n  \"phx-keydown-loading\", \"phx-keyup-loading\", \"phx-blur-loading\", \"phx-focus-loading\"\n]\nexport const PHX_COMPONENT = \"data-phx-component\"\nexport const PHX_LIVE_LINK = \"data-phx-link\"\nexport const PHX_TRACK_STATIC = \"track-static\"\nexport const PHX_LINK_STATE = \"data-phx-link-state\"\nexport const PHX_REF = \"data-phx-ref\"\nexport const PHX_TRACK_UPLOADS = \"track-uploads\"\nexport const PHX_UPLOAD_REF = \"data-phx-upload-ref\"\nexport const PHX_PREFLIGHTED_REFS = \"data-phx-preflighted-refs\"\nexport const PHX_DONE_REFS = \"data-phx-done-refs\"\nexport const PHX_DROP_TARGET = \"drop-target\"\nexport const PHX_ACTIVE_ENTRY_REFS = \"data-phx-active-refs\"\nexport const PHX_LIVE_FILE_UPDATED = \"phx:live-file:updated\"\nexport const PHX_SKIP = \"data-phx-skip\"\nexport const PHX_PRUNE = \"data-phx-prune\"\nexport const PHX_PAGE_LOADING = \"page-loading\"\nexport const PHX_CONNECTED_CLASS = \"phx-connected\"\nexport const PHX_DISCONNECTED_CLASS = \"phx-loading\"\nexport const PHX_NO_FEEDBACK_CLASS = \"phx-no-feedback\"\nexport const PHX_ERROR_CLASS = \"phx-error\"\nexport const PHX_PARENT_ID = \"data-phx-parent-id\"\nexport const PHX_MAIN = \"data-phx-main\"\nexport const PHX_ROOT_ID = \"data-phx-root-id\"\nexport const PHX_TRIGGER_ACTION = \"trigger-action\"\nexport const PHX_FEEDBACK_FOR = \"feedback-for\"\nexport const PHX_HAS_FOCUSED = \"phx-has-focused\"\nexport const FOCUSABLE_INPUTS = [\"text\", \"textarea\", \"number\", \"email\", \"password\", \"search\", \"tel\", \"url\", \"date\", \"time\"]\nexport const CHECKABLE_INPUTS = [\"checkbox\", \"radio\"]\nexport const PHX_HAS_SUBMITTED = \"phx-has-submitted\"\nexport const PHX_SESSION = \"data-phx-session\"\nexport const PHX_VIEW_SELECTOR = `[${PHX_SESSION}]`\nexport const PHX_STATIC = \"data-phx-static\"\nexport const PHX_READONLY = \"data-phx-readonly\"\nexport const PHX_DISABLED = \"data-phx-disabled\"\nexport const PHX_DISABLE_WITH = \"disable-with\"\nexport const PHX_DISABLE_WITH_RESTORE = \"data-phx-disable-with-restore\"\nexport const PHX_HOOK = \"hook\"\nexport const PHX_DEBOUNCE = \"debounce\"\nexport const PHX_THROTTLE = \"throttle\"\nexport const PHX_UPDATE = \"update\"\nexport const PHX_KEY = \"key\"\nexport const PHX_PRIVATE = \"phxPrivate\"\nexport const PHX_AUTO_RECOVER = \"auto-recover\"\nexport const PHX_LV_DEBUG = \"phx:live-socket:debug\"\nexport const PHX_LV_PROFILE = \"phx:live-socket:profiling\"\nexport const PHX_LV_LATENCY_SIM = \"phx:live-socket:latency-sim\"\nexport const PHX_PROGRESS = \"progress\"\nexport const LOADER_TIMEOUT = 1\nexport const BEFORE_UNLOAD_LOADER_TIMEOUT = 200\nexport const BINDING_PREFIX = \"phx-\"\nexport const PUSH_TIMEOUT = 30000\nexport const LINK_HEADER = \"x-requested-with\"\nexport const RESPONSE_URL_HEADER = \"x-response-url\"\nexport const DEBOUNCE_TRIGGER = \"debounce-trigger\"\nexport const THROTTLED = \"throttled\"\nexport const DEBOUNCE_PREV_KEY = \"debounce-prev-key\"\nexport const DEFAULTS = {\n  debounce: 300,\n  throttle: 300\n}\n\n// Rendered\nexport const DYNAMICS = \"d\"\nexport const STATIC = \"s\"\nexport const COMPONENTS = \"c\"\nexport const EVENTS = \"e\"\nexport const REPLY = \"r\"\nexport const TITLE = \"t\"\nexport const TEMPLATES = \"p\"\n", "import {\n  logError\n} from \"./utils\"\n\nexport default class EntryUploader {\n  constructor(entry, chunkSize, liveSocket){\n    this.liveSocket = liveSocket\n    this.entry = entry\n    this.offset = 0\n    this.chunkSize = chunkSize\n    this.chunkTimer = null\n    this.uploadChannel = liveSocket.channel(`lvu:${entry.ref}`, {token: entry.metadata()})\n  }\n\n  error(reason){\n    clearTimeout(this.chunkTimer)\n    this.uploadChannel.leave()\n    this.entry.error(reason)\n  }\n\n  upload(){\n    this.uploadChannel.onError(reason => this.error(reason))\n    this.uploadChannel.join()\n      .receive(\"ok\", _data => this.readNextChunk())\n      .receive(\"error\", reason => this.error(reason))\n  }\n\n  isDone(){ return this.offset >= this.entry.file.size }\n\n  readNextChunk(){\n    let reader = new window.FileReader()\n    let blob = this.entry.file.slice(this.offset, this.chunkSize + this.offset)\n    reader.onload = (e) => {\n      if(e.target.error === null){\n        this.offset += e.target.result.byteLength\n        this.pushChunk(e.target.result)\n      } else {\n        return logError(\"Read error: \" + e.target.error)\n      }\n    }\n    reader.readAsArrayBuffer(blob)\n  }\n\n  pushChunk(chunk){\n    if(!this.uploadChannel.isJoined()){ return }\n    this.uploadChannel.push(\"chunk\", chunk)\n      .receive(\"ok\", () => {\n        this.entry.progress((this.offset / this.entry.file.size) * 100)\n        if(!this.isDone()){\n          this.chunkTimer = setTimeout(() => this.readNextChunk(), this.liveSocket.getLatencySim() || 0)\n        }\n      })\n  }\n}\n", "import {\n  PHX_VIEW_SELECTOR\n} from \"./constants\"\n\nimport EntryUploader from \"./entry_uploader\"\n\nexport let logError = (msg, obj) => console.error && console.error(msg, obj)\n\nexport let isCid = (cid) => typeof(cid) === \"number\"\n\nexport function detectDuplicateIds(){\n  let ids = new Set()\n  let elems = document.querySelectorAll(\"*[id]\")\n  for(let i = 0, len = elems.length; i < len; i++){\n    if(ids.has(elems[i].id)){\n      console.error(`Multiple IDs detected: ${elems[i].id}. Ensure unique element ids.`)\n    } else {\n      ids.add(elems[i].id)\n    }\n  }\n}\n\nexport let debug = (view, kind, msg, obj) => {\n  if(view.liveSocket.isDebugEnabled()){\n    console.log(`${view.id} ${kind}: ${msg} - `, obj)\n  }\n}\n\n// wraps value in closure or returns closure\nexport let closure = (val) => typeof val === \"function\" ? val : function (){ return val }\n\nexport let clone = (obj) => { return JSON.parse(JSON.stringify(obj)) }\n\nexport let closestPhxBinding = (el, binding, borderEl) => {\n  do {\n    if(el.matches(`[${binding}]`)){ return el }\n    el = el.parentElement || el.parentNode\n  } while(el !== null && el.nodeType === 1 && !((borderEl && borderEl.isSameNode(el)) || el.matches(PHX_VIEW_SELECTOR)))\n  return null\n}\n\nexport let isObject = (obj) => {\n  return obj !== null && typeof obj === \"object\" && !(obj instanceof Array)\n}\n\nexport let isEqualObj = (obj1, obj2) => JSON.stringify(obj1) === JSON.stringify(obj2)\n\nexport let isEmpty = (obj) => {\n  for(let x in obj){ return false }\n  return true\n}\n\nexport let maybe = (el, callback) => el && callback(el)\n\nexport let channelUploader = function (entries, onError, resp, liveSocket){\n  entries.forEach(entry => {\n    let entryUploader = new EntryUploader(entry, resp.config.chunk_size, liveSocket)\n    entryUploader.upload()\n  })\n}\n", "let Browser = {\n  canPushState(){ return (typeof (history.pushState) !== \"undefined\") },\n\n  dropLocal(localStorage, namespace, subkey){\n    return localStorage.removeItem(this.localKey(namespace, subkey))\n  },\n\n  updateLocal(localStorage, namespace, subkey, initial, func){\n    let current = this.getLocal(localStorage, namespace, subkey)\n    let key = this.localKey(namespace, subkey)\n    let newVal = current === null ? initial : func(current)\n    localStorage.setItem(key, JSON.stringify(newVal))\n    return newVal\n  },\n\n  getLocal(localStorage, namespace, subkey){\n    return JSON.parse(localStorage.getItem(this.localKey(namespace, subkey)))\n  },\n\n  updateCurrentState(callback){\n    if(!this.canPushState()){ return }\n    history.replaceState(callback(history.state || {}), \"\", window.location.href)\n  },\n\n  pushState(kind, meta, to){\n    if(this.canPushState()){\n      if(to !== window.location.href){\n        if(meta.type == \"redirect\" && meta.scroll){\n          // If we're redirecting store the current scrollY for the current history state.\n          let currentState = history.state || {}\n          currentState.scroll = meta.scroll\n          history.replaceState(currentState, \"\", window.location.href)\n        }\n\n        delete meta.scroll // Only store the scroll in the redirect case.\n        history[kind + \"State\"](meta, \"\", to || null) // IE will coerce undefined to string\n        let hashEl = this.getHashTargetEl(window.location.hash)\n\n        if(hashEl){\n          hashEl.scrollIntoView()\n        } else if(meta.type === \"redirect\"){\n          window.scroll(0, 0)\n        }\n      }\n    } else {\n      this.redirect(to)\n    }\n  },\n\n  setCookie(name, value){\n    document.cookie = `${name}=${value}`\n  },\n\n  getCookie(name){\n    return document.cookie.replace(new RegExp(`(?:(?:^|.*;\\s*)${name}\\s*\\=\\s*([^;]*).*$)|^.*$`), \"$1\")\n  },\n\n  redirect(toURL, flash){\n    if(flash){ Browser.setCookie(\"__phoenix_flash__\", flash + \"; max-age=60000; path=/\") }\n    window.location = toURL\n  },\n\n  localKey(namespace, subkey){ return `${namespace}-${subkey}` },\n\n  getHashTargetEl(maybeHash){\n    let hash = maybeHash.toString().substring(1)\n    if(hash === \"\"){ return }\n    return document.getElementById(hash) || document.querySelector(`a[name=\"${hash}\"]`)\n  }\n}\n\nexport default Browser\n", "import {\n  CHECKABLE_INPUTS,\n  DEBOUNCE_PREV_KEY,\n  DEBOUNCE_TRIGGER,\n  FOCUSABLE_INPUTS,\n  PHX_COMPONENT,\n  PHX_EVENT_CLASSES,\n  PHX_HAS_FOCUSED,\n  PHX_HAS_SUBMITTED,\n  PHX_MAIN,\n  PHX_NO_FEEDBACK_CLASS,\n  PHX_PARENT_ID,\n  PHX_PRIVATE,\n  PHX_REF,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  THROTTLED\n} from \"./constants\"\n\nimport {\n  logError\n} from \"./utils\"\n\nlet DOM = {\n  byId(id){ return document.getElementById(id) || logError(`no id found for ${id}`) },\n\n  removeClass(el, className){\n    el.classList.remove(className)\n    if(el.classList.length === 0){ el.removeAttribute(\"class\") }\n  },\n\n  all(node, query, callback){\n    if(!node){ return [] }\n    let array = Array.from(node.querySelectorAll(query))\n    return callback ? array.forEach(callback) : array\n  },\n\n  childNodeLength(html){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return template.content.childElementCount\n  },\n\n  isUploadInput(el){ return el.type === \"file\" && el.getAttribute(PHX_UPLOAD_REF) !== null },\n\n  findUploadInputs(node){ return this.all(node, `input[type=\"file\"][${PHX_UPLOAD_REF}]`) },\n\n  findComponentNodeList(node, cid){\n    return this.filterWithinSameLiveView(this.all(node, `[${PHX_COMPONENT}=\"${cid}\"]`), node)\n  },\n\n  isPhxDestroyed(node){\n    return node.id && DOM.private(node, \"destroyed\") ? true : false\n  },\n\n  markPhxChildDestroyed(el){\n    if(this.isPhxChild(el)){ el.setAttribute(PHX_SESSION, \"\") }\n    this.putPrivate(el, \"destroyed\", true)\n  },\n\n  findPhxChildrenInFragment(html, parentId){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return this.findPhxChildren(template.content, parentId)\n  },\n\n  isIgnored(el, phxUpdate){\n    return (el.getAttribute(phxUpdate) || el.getAttribute(\"data-phx-update\")) === \"ignore\"\n  },\n\n  isPhxUpdate(el, phxUpdate, updateTypes){\n    return el.getAttribute && updateTypes.indexOf(el.getAttribute(phxUpdate)) >= 0\n  },\n\n  findPhxChildren(el, parentId){\n    return this.all(el, `${PHX_VIEW_SELECTOR}[${PHX_PARENT_ID}=\"${parentId}\"]`)\n  },\n\n  findParentCIDs(node, cids){\n    let initial = new Set(cids)\n    return cids.reduce((acc, cid) => {\n      let selector = `[${PHX_COMPONENT}=\"${cid}\"] [${PHX_COMPONENT}]`\n\n      this.filterWithinSameLiveView(this.all(node, selector), node)\n        .map(el => parseInt(el.getAttribute(PHX_COMPONENT)))\n        .forEach(childCID => acc.delete(childCID))\n\n      return acc\n    }, initial)\n  },\n\n  filterWithinSameLiveView(nodes, parent){\n    if(parent.querySelector(PHX_VIEW_SELECTOR)){\n      return nodes.filter(el => this.withinSameLiveView(el, parent))\n    } else {\n      return nodes\n    }\n  },\n\n  withinSameLiveView(node, parent){\n    while(node = node.parentNode){\n      if(node.isSameNode(parent)){ return true }\n      if(node.getAttribute(PHX_SESSION) !== null){ return false }\n    }\n  },\n\n  private(el, key){ return el[PHX_PRIVATE] && el[PHX_PRIVATE][key] },\n\n  deletePrivate(el, key){ el[PHX_PRIVATE] && delete (el[PHX_PRIVATE][key]) },\n\n  putPrivate(el, key, value){\n    if(!el[PHX_PRIVATE]){ el[PHX_PRIVATE] = {} }\n    el[PHX_PRIVATE][key] = value\n  },\n\n  updatePrivate(el, key, defaultVal, updateFunc){\n    let existing = this.private(el, key)\n    if(existing === undefined){\n      this.putPrivate(el, key, updateFunc(defaultVal))\n    } else {\n      this.putPrivate(el, key, updateFunc(existing))\n    }\n  },\n\n  copyPrivates(target, source){\n    if(source[PHX_PRIVATE]){\n      target[PHX_PRIVATE] = source[PHX_PRIVATE]\n    }\n  },\n\n  putTitle(str){\n    let titleEl = document.querySelector(\"title\")\n    let {prefix, suffix} = titleEl.dataset\n    document.title = `${prefix || \"\"}${str}${suffix || \"\"}`\n  },\n\n  debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, callback){\n    let debounce = el.getAttribute(phxDebounce)\n    let throttle = el.getAttribute(phxThrottle)\n    if(debounce === \"\"){ debounce = defaultDebounce }\n    if(throttle === \"\"){ throttle = defaultThrottle }\n    let value = debounce || throttle\n    switch(value){\n      case null: return callback()\n\n      case \"blur\":\n        if(this.once(el, \"debounce-blur\")){\n          el.addEventListener(\"blur\", () => callback())\n        }\n        return\n\n      default:\n        let timeout = parseInt(value)\n        let trigger = () => throttle ? this.deletePrivate(el, THROTTLED) : callback()\n        let currentCycle = this.incCycle(el, DEBOUNCE_TRIGGER, trigger)\n        if(isNaN(timeout)){ return logError(`invalid throttle/debounce value: ${value}`) }\n        if(throttle){\n          let newKeyDown = false\n          if(event.type === \"keydown\"){\n            let prevKey = this.private(el, DEBOUNCE_PREV_KEY)\n            this.putPrivate(el, DEBOUNCE_PREV_KEY, event.key)\n            newKeyDown = prevKey !== event.key\n          }\n\n          if(!newKeyDown && this.private(el, THROTTLED)){\n            return false\n          } else {\n            callback()\n            this.putPrivate(el, THROTTLED, true)\n            setTimeout(() => this.triggerCycle(el, DEBOUNCE_TRIGGER), timeout)\n          }\n        } else {\n          setTimeout(() => this.triggerCycle(el, DEBOUNCE_TRIGGER, currentCycle), timeout)\n        }\n\n\n        let form = el.form\n        if(form && this.once(form, \"bind-debounce\")){\n          form.addEventListener(\"submit\", () => {\n            Array.from((new FormData(form)).entries(), ([name]) => {\n              let input = form.querySelector(`[name=\"${name}\"]`)\n              this.incCycle(input, DEBOUNCE_TRIGGER)\n              this.deletePrivate(input, THROTTLED)\n            })\n          })\n        }\n        if(this.once(el, \"bind-debounce\")){\n          el.addEventListener(\"blur\", () => this.triggerCycle(el, DEBOUNCE_TRIGGER))\n        }\n    }\n  },\n\n  triggerCycle(el, key, currentCycle){\n    let [cycle, trigger] = this.private(el, key)\n    if(!currentCycle){ currentCycle = cycle }\n    if(currentCycle === cycle){\n      this.incCycle(el, key)\n      trigger()\n    }\n  },\n\n  once(el, key){\n    if(this.private(el, key) === true){ return false }\n    this.putPrivate(el, key, true)\n    return true\n  },\n\n  incCycle(el, key, trigger = function (){ }){\n    let [currentCycle] = this.private(el, key) || [0, trigger]\n    currentCycle++\n    this.putPrivate(el, key, [currentCycle, trigger])\n    return currentCycle\n  },\n\n  discardError(container, el, phxFeedbackFor){\n    let field = el.getAttribute && el.getAttribute(phxFeedbackFor)\n    // TODO: Remove id lookup after we update Phoenix to use input_name instead of input_id\n    let input = field && container.querySelector(`[id=\"${field}\"], [name=\"${field}\"]`)\n    if(!input){ return }\n\n    if(!(this.private(input, PHX_HAS_FOCUSED) || this.private(input.form, PHX_HAS_SUBMITTED))){\n      el.classList.add(PHX_NO_FEEDBACK_CLASS)\n    }\n  },\n\n  showError(inputEl, phxFeedbackFor){\n    if(inputEl.id || inputEl.name){\n      this.all(inputEl.form, `[${phxFeedbackFor}=\"${inputEl.id}\"], [${phxFeedbackFor}=\"${inputEl.name}\"]`, (el) => {\n        this.removeClass(el, PHX_NO_FEEDBACK_CLASS)\n      })\n    }\n  },\n\n  isPhxChild(node){\n    return node.getAttribute && node.getAttribute(PHX_PARENT_ID)\n  },\n\n  dispatchEvent(target, eventString, detail = {}){\n    let event = new CustomEvent(eventString, {bubbles: true, cancelable: true, detail: detail})\n    target.dispatchEvent(event)\n  },\n\n  cloneNode(node, html){\n    if(typeof (html) === \"undefined\"){\n      return node.cloneNode(true)\n    } else {\n      let cloned = node.cloneNode(false)\n      cloned.innerHTML = html\n      return cloned\n    }\n  },\n\n  mergeAttrs(target, source, opts = {}){\n    let exclude = opts.exclude || []\n    let isIgnored = opts.isIgnored\n    let sourceAttrs = source.attributes\n    for(let i = sourceAttrs.length - 1; i >= 0; i--){\n      let name = sourceAttrs[i].name\n      if(exclude.indexOf(name) < 0){ target.setAttribute(name, source.getAttribute(name)) }\n    }\n\n    let targetAttrs = target.attributes\n    for(let i = targetAttrs.length - 1; i >= 0; i--){\n      let name = targetAttrs[i].name\n      if(isIgnored){\n        if(name.startsWith(\"data-\") && !source.hasAttribute(name)){ target.removeAttribute(name) }\n      } else {\n        if(!source.hasAttribute(name)){ target.removeAttribute(name) }\n      }\n    }\n  },\n\n  mergeFocusedInput(target, source){\n    // skip selects because FF will reset highlighted index for any setAttribute\n    if(!(target instanceof HTMLSelectElement)){ DOM.mergeAttrs(target, source, {except: [\"value\"]}) }\n    if(source.readOnly){\n      target.setAttribute(\"readonly\", true)\n    } else {\n      target.removeAttribute(\"readonly\")\n    }\n  },\n\n  hasSelectionRange(el){\n    return el.setSelectionRange && (el.type === \"text\" || el.type === \"textarea\")\n  },\n\n  restoreFocus(focused, selectionStart, selectionEnd){\n    if(!DOM.isTextualInput(focused)){ return }\n    let wasFocused = focused.matches(\":focus\")\n    if(focused.readOnly){ focused.blur() }\n    if(!wasFocused){ focused.focus() }\n    if(this.hasSelectionRange(focused)){\n      focused.setSelectionRange(selectionStart, selectionEnd)\n    }\n  },\n\n  isFormInput(el){ return /^(?:input|select|textarea)$/i.test(el.tagName) && el.type !== \"button\" },\n\n  syncAttrsToProps(el){\n    if(el instanceof HTMLInputElement && CHECKABLE_INPUTS.indexOf(el.type.toLocaleLowerCase()) >= 0){\n      el.checked = el.getAttribute(\"checked\") !== null\n    }\n  },\n\n  isTextualInput(el){ return FOCUSABLE_INPUTS.indexOf(el.type) >= 0 },\n\n  isNowTriggerFormExternal(el, phxTriggerExternal){\n    return el.getAttribute && el.getAttribute(phxTriggerExternal) !== null\n  },\n\n  syncPendingRef(fromEl, toEl, disableWith){\n    let ref = fromEl.getAttribute(PHX_REF)\n    if(ref === null){ return true }\n\n    if(DOM.isFormInput(fromEl) || fromEl.getAttribute(disableWith) !== null){\n      if(DOM.isUploadInput(fromEl)){ DOM.mergeAttrs(fromEl, toEl, {isIgnored: true}) }\n      DOM.putPrivate(fromEl, PHX_REF, toEl)\n      return false\n    } else {\n      PHX_EVENT_CLASSES.forEach(className => {\n        fromEl.classList.contains(className) && toEl.classList.add(className)\n      })\n      toEl.setAttribute(PHX_REF, ref)\n      return true\n    }\n  },\n\n  cleanChildNodes(container, phxUpdate){\n    if(DOM.isPhxUpdate(container, phxUpdate, [\"append\", \"prepend\"])){\n      let toRemove = []\n      container.childNodes.forEach(childNode => {\n        if(!childNode.id){\n          // Skip warning if it's an empty text node (e.g. a new-line)\n          let isEmptyTextNode = childNode.nodeType === Node.TEXT_NODE && childNode.nodeValue.trim() === \"\"\n          if(!isEmptyTextNode){\n            logError(\"only HTML element tags with an id are allowed inside containers with phx-update.\\n\\n\" +\n              `removing illegal node: \"${(childNode.outerHTML || childNode.nodeValue).trim()}\"\\n\\n`)\n          }\n          toRemove.push(childNode)\n        }\n      })\n      toRemove.forEach(childNode => childNode.remove())\n    }\n  },\n\n  replaceRootContainer(container, tagName, attrs){\n    let retainedAttrs = new Set([\"id\", PHX_SESSION, PHX_STATIC, PHX_MAIN, PHX_ROOT_ID])\n    if(container.tagName.toLowerCase() === tagName.toLowerCase()){\n      Array.from(container.attributes)\n        .filter(attr => !retainedAttrs.has(attr.name.toLowerCase()))\n        .forEach(attr => container.removeAttribute(attr.name))\n\n      Object.keys(attrs)\n        .filter(name => !retainedAttrs.has(name.toLowerCase()))\n        .forEach(attr => container.setAttribute(attr, attrs[attr]))\n\n      return container\n\n    } else {\n      let newContainer = document.createElement(tagName)\n      Object.keys(attrs).forEach(attr => newContainer.setAttribute(attr, attrs[attr]))\n      retainedAttrs.forEach(attr => newContainer.setAttribute(attr, container.getAttribute(attr)))\n      newContainer.innerHTML = container.innerHTML\n      container.replaceWith(newContainer)\n      return newContainer\n    }\n  },\n\n  getSticky(el, name, defaultVal){\n    let op = (DOM.private(el, \"sticky\") || []).find(([existingName, ]) => name === existingName)\n    if(op){\n      let [_name, _op, stashedResult] = op\n      return stashedResult\n    } else {\n      return typeof(defaultVal) === \"function\" ? defaultVal() : defaultVal\n    }\n  },\n\n  deleteSticky(el, name){\n    this.updatePrivate(el, \"sticky\", [], ops => {\n      return ops.filter(([existingName, _]) => existingName !== name)\n    })\n  },\n\n  putSticky(el, name, op){\n    let stashedResult = op(el)\n    this.updatePrivate(el, \"sticky\", [], ops => {\n      let existingIndex = ops.findIndex(([existingName, ]) => name === existingName)\n      if(existingIndex >= 0){\n        ops[existingIndex] = [name, op, stashedResult]\n      } else {\n        ops.push([name, op, stashedResult])\n      }\n      return ops\n    })\n  },\n\n  applyStickyOperations(el){\n    let ops = DOM.private(el, \"sticky\")\n    if(!ops){ return }\n\n    ops.forEach(([name, op, _stashed]) => this.putSticky(el, name, op))\n  }\n}\n\nexport default DOM\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS\n} from \"./constants\"\n\nimport {\n  channelUploader,\n  logError\n} from \"./utils\"\n\nimport LiveUploader from \"./live_uploader\"\n\nexport default class UploadEntry {\n  static isActive(fileEl, file){\n    let isNew = file._phxRef === undefined\n    let activeRefs = fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    let isActive = activeRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return file.size > 0 && (isNew || isActive)\n  }\n\n  static isPreflighted(fileEl, file){\n    let preflightedRefs = fileEl.getAttribute(PHX_PREFLIGHTED_REFS).split(\",\")\n    let isPreflighted = preflightedRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return isPreflighted && this.isActive(fileEl, file)\n  }\n\n  constructor(fileEl, file, view){\n    this.ref = LiveUploader.genFileRef(file)\n    this.fileEl = fileEl\n    this.file = file\n    this.view = view\n    this.meta = null\n    this._isCancelled = false\n    this._isDone = false\n    this._progress = 0\n    this._lastProgressSent = -1\n    this._onDone = function (){ }\n    this._onElUpdated = this.onElUpdated.bind(this)\n    this.fileEl.addEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n  }\n\n  metadata(){ return this.meta }\n\n  progress(progress){\n    this._progress = Math.floor(progress)\n    if(this._progress > this._lastProgressSent){\n      if(this._progress >= 100){\n        this._progress = 100\n        this._lastProgressSent = 100\n        this._isDone = true\n        this.view.pushFileProgress(this.fileEl, this.ref, 100, () => {\n          LiveUploader.untrackFile(this.fileEl, this.file)\n          this._onDone()\n        })\n      } else {\n        this._lastProgressSent = this._progress\n        this.view.pushFileProgress(this.fileEl, this.ref, this._progress)\n      }\n    }\n  }\n\n  cancel(){\n    this._isCancelled = true\n    this._isDone = true\n    this._onDone()\n  }\n\n  isDone(){ return this._isDone }\n\n  error(reason = \"failed\"){\n    this.view.pushFileProgress(this.fileEl, this.ref, {error: reason})\n    LiveUploader.clearFiles(this.fileEl)\n  }\n\n  //private\n\n  onDone(callback){\n    this._onDone = () => {\n      this.fileEl.removeEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n      callback()\n    }\n  }\n\n  onElUpdated(){\n    let activeRefs = this.fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    if(activeRefs.indexOf(this.ref) === -1){ this.cancel() }\n  }\n\n  toPreflightPayload(){\n    return {\n      last_modified: this.file.lastModified,\n      name: this.file.name,\n      size: this.file.size,\n      type: this.file.type,\n      ref: this.ref\n    }\n  }\n\n  uploader(uploaders){\n    if(this.meta.uploader){\n      let callback = uploaders[this.meta.uploader] || logError(`no uploader configured for ${this.meta.uploader}`)\n      return {name: this.meta.uploader, callback: callback}\n    } else {\n      return {name: \"channel\", callback: channelUploader}\n    }\n  }\n\n  zipPostFlight(resp){\n    this.meta = resp.entries[this.ref]\n    if(!this.meta){ logError(`no preflight upload response returned with ref ${this.ref}`, {input: this.fileEl, response: resp}) }\n  }\n}\n", "import {\n  PHX_DONE_REFS,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport {\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport UploadEntry from \"./upload_entry\"\n\nlet liveUploaderFileRef = 0\n\nexport default class LiveUploader {\n  static genFileRef(file){\n    let ref = file._phxRef\n    if(ref !== undefined){\n      return ref\n    } else {\n      file._phxRef = (liveUploaderFileRef++).toString()\n      return file._phxRef\n    }\n  }\n\n  static getEntryDataURL(inputEl, ref, callback){\n    let file = this.activeFiles(inputEl).find(file => this.genFileRef(file) === ref)\n    callback(URL.createObjectURL(file))\n  }\n\n  static hasUploadsInProgress(formEl){\n    let active = 0\n    DOM.findUploadInputs(formEl).forEach(input => {\n      if(input.getAttribute(PHX_PREFLIGHTED_REFS) !== input.getAttribute(PHX_DONE_REFS)){\n        active++\n      }\n    })\n    return active > 0\n  }\n\n  static serializeUploads(inputEl){\n    let files = this.activeFiles(inputEl)\n    let fileData = {}\n    files.forEach(file => {\n      let entry = {path: inputEl.name}\n      let uploadRef = inputEl.getAttribute(PHX_UPLOAD_REF)\n      fileData[uploadRef] = fileData[uploadRef] || []\n      entry.ref = this.genFileRef(file)\n      entry.name = file.name || entry.ref\n      entry.type = file.type\n      entry.size = file.size\n      fileData[uploadRef].push(entry)\n    })\n    return fileData\n  }\n\n  static clearFiles(inputEl){\n    inputEl.value = null\n    inputEl.removeAttribute(PHX_UPLOAD_REF)\n    DOM.putPrivate(inputEl, \"files\", [])\n  }\n\n  static untrackFile(inputEl, file){\n    DOM.putPrivate(inputEl, \"files\", DOM.private(inputEl, \"files\").filter(f => !Object.is(f, file)))\n  }\n\n  static trackFiles(inputEl, files){\n    if(inputEl.getAttribute(\"multiple\") !== null){\n      let newFiles = files.filter(file => !this.activeFiles(inputEl).find(f => Object.is(f, file)))\n      DOM.putPrivate(inputEl, \"files\", this.activeFiles(inputEl).concat(newFiles))\n      inputEl.value = null\n    } else {\n      DOM.putPrivate(inputEl, \"files\", files)\n    }\n  }\n\n  static activeFileInputs(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(el => el.files && this.activeFiles(el).length > 0)\n  }\n\n  static activeFiles(input){\n    return (DOM.private(input, \"files\") || []).filter(f => UploadEntry.isActive(input, f))\n  }\n\n  static inputsAwaitingPreflight(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(input => this.filesAwaitingPreflight(input).length > 0)\n  }\n\n  static filesAwaitingPreflight(input){\n    return this.activeFiles(input).filter(f => !UploadEntry.isPreflighted(input, f))\n  }\n\n  constructor(inputEl, view, onComplete){\n    this.view = view\n    this.onComplete = onComplete\n    this._entries =\n      Array.from(LiveUploader.filesAwaitingPreflight(inputEl) || [])\n        .map(file => new UploadEntry(inputEl, file, view))\n\n    this.numEntriesInProgress = this._entries.length\n  }\n\n  entries(){ return this._entries }\n\n  initAdapterUpload(resp, onError, liveSocket){\n    this._entries =\n      this._entries.map(entry => {\n        entry.zipPostFlight(resp)\n        entry.onDone(() => {\n          this.numEntriesInProgress--\n          if(this.numEntriesInProgress === 0){ this.onComplete() }\n        })\n        return entry\n      })\n\n    let groupedEntries = this._entries.reduce((acc, entry) => {\n      let {name, callback} = entry.uploader(liveSocket.uploaders)\n      acc[name] = acc[name] || {callback: callback, entries: []}\n      acc[name].entries.push(entry)\n      return acc\n    }, {})\n\n    for(let name in groupedEntries){\n      let {callback, entries} = groupedEntries[name]\n      callback(entries, onError, resp, liveSocket)\n    }\n  }\n}\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport LiveUploader from \"./live_uploader\"\n\nlet Hooks = {\n  LiveFileUpload: {\n    activeRefs(){ return this.el.getAttribute(PHX_ACTIVE_ENTRY_REFS) },\n\n    preflightedRefs(){ return this.el.getAttribute(PHX_PREFLIGHTED_REFS) },\n\n    mounted(){ this.preflightedWas = this.preflightedRefs() },\n\n    updated(){\n      let newPreflights = this.preflightedRefs()\n      if(this.preflightedWas !== newPreflights){\n        this.preflightedWas = newPreflights\n        if(newPreflights === \"\"){\n          this.__view.cancelSubmit(this.el.form)\n        }\n      }\n\n      if(this.activeRefs() === \"\"){ this.el.value = null }\n      this.el.dispatchEvent(new CustomEvent(PHX_LIVE_FILE_UPDATED))\n    }\n  },\n\n  LiveImgPreview: {\n    mounted(){\n      this.ref = this.el.getAttribute(\"data-phx-entry-ref\")\n      this.inputEl = document.getElementById(this.el.getAttribute(PHX_UPLOAD_REF))\n      LiveUploader.getEntryDataURL(this.inputEl, this.ref, url => {\n        this.url = url\n        this.el.src = url\n      })\n    },\n    destroyed(){\n      URL.revokeObjectURL(this.url)\n    }\n  }\n}\n\nexport default Hooks\n", "import {\n  maybe\n} from \"./utils\"\n\nimport DOM from \"./dom\"\n\nexport default class DOMPostMorphRestorer {\n  constructor(containerBefore, containerAfter, updateType){\n    let idsBefore = new Set()\n    let idsAfter = new Set([...containerAfter.children].map(child => child.id))\n\n    let elementsToModify = []\n\n    Array.from(containerBefore.children).forEach(child => {\n      if(child.id){ // all of our children should be elements with ids\n        idsBefore.add(child.id)\n        if(idsAfter.has(child.id)){\n          let previousElementId = child.previousElementSibling && child.previousElementSibling.id\n          elementsToModify.push({elementId: child.id, previousElementId: previousElementId})\n        }\n      }\n    })\n\n    this.containerId = containerAfter.id\n    this.updateType = updateType\n    this.elementsToModify = elementsToModify\n    this.elementIdsToAdd = [...idsAfter].filter(id => !idsBefore.has(id))\n  }\n\n  // We do the following to optimize append/prepend operations:\n  //   1) Track ids of modified elements & of new elements\n  //   2) All the modified elements are put back in the correct position in the DOM tree\n  //      by storing the id of their previous sibling\n  //   3) New elements are going to be put in the right place by morphdom during append.\n  //      For prepend, we move them to the first position in the container\n  perform(){\n    let container = DOM.byId(this.containerId)\n    this.elementsToModify.forEach(elementToModify => {\n      if(elementToModify.previousElementId){\n        maybe(document.getElementById(elementToModify.previousElementId), previousElem => {\n          maybe(document.getElementById(elementToModify.elementId), elem => {\n            let isInRightPlace = elem.previousElementSibling && elem.previousElementSibling.id == previousElem.id\n            if(!isInRightPlace){\n              previousElem.insertAdjacentElement(\"afterend\", elem)\n            }\n          })\n        })\n      } else {\n        // This is the first element in the container\n        maybe(document.getElementById(elementToModify.elementId), elem => {\n          let isInRightPlace = elem.previousElementSibling == null\n          if(!isInRightPlace){\n            container.insertAdjacentElement(\"afterbegin\", elem)\n          }\n        })\n      }\n    })\n\n    if(this.updateType == \"prepend\"){\n      this.elementIdsToAdd.reverse().forEach(elemId => {\n        maybe(document.getElementById(elemId), elem => container.insertAdjacentElement(\"afterbegin\", elem))\n      })\n    }\n  }\n}\n", "var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n      return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = Object.create(null);\n        var keyedRemovalList = [];\n\n        function addKeyedRemoval(key) {\n            keyedRemovalList.push(key);\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    // if we find a duplicate #id node in cache, replace `el` with cache value\n                    // and morph it to the child node.\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    } else {\n                      handleNodeAdded(curChild);\n                    }\n                } else {\n                  // recursively call for curChild and it's children to see if we find something in\n                  // fromNodesLookup\n                  handleNodeAdded(curChild);\n                }\n\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n                return;\n            }\n\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n", "import {\n  PHX_COMPONENT,\n  PHX_DISABLE_WITH,\n  PHX_FEEDBACK_FOR,\n  PHX_PRUNE,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_SKIP,\n  PHX_STATIC,\n  PHX_TRIGGER_ACTION,\n  PHX_UPDATE\n} from \"./constants\"\n\nimport {\n  detectDuplicateIds,\n  isCid\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport DOMPostMorphRestorer from \"./dom_post_morph_restorer\"\nimport morphdom from \"morphdom\"\n\nexport default class DOMPatch {\n  static patchEl(fromEl, toEl, activeElement){\n    morphdom(fromEl, toEl, {\n      childrenOnly: false,\n      onBeforeElUpdated: (fromEl, toEl) => {\n        if(activeElement && activeElement.isSameNode(fromEl) && DOM.isFormInput(fromEl)){\n          DOM.mergeFocusedInput(fromEl, toEl)\n          return false\n        }\n      }\n    })\n  }\n\n  constructor(view, container, id, html, targetCID){\n    this.view = view\n    this.liveSocket = view.liveSocket\n    this.container = container\n    this.id = id\n    this.rootID = view.root.id\n    this.html = html\n    this.targetCID = targetCID\n    this.cidPatch = isCid(this.targetCID)\n    this.callbacks = {\n      beforeadded: [], beforeupdated: [], beforephxChildAdded: [],\n      afteradded: [], afterupdated: [], afterdiscarded: [], afterphxChildAdded: [],\n      aftertransitionsDiscarded: []\n    }\n  }\n\n  before(kind, callback){ this.callbacks[`before${kind}`].push(callback) }\n  after(kind, callback){ this.callbacks[`after${kind}`].push(callback) }\n\n  trackBefore(kind, ...args){\n    this.callbacks[`before${kind}`].forEach(callback => callback(...args))\n  }\n\n  trackAfter(kind, ...args){\n    this.callbacks[`after${kind}`].forEach(callback => callback(...args))\n  }\n\n  markPrunableContentForRemoval(){\n    DOM.all(this.container, \"[phx-update=append] > *, [phx-update=prepend] > *\", el => {\n      el.setAttribute(PHX_PRUNE, \"\")\n    })\n  }\n\n  perform(){\n    let {view, liveSocket, container, html} = this\n    let targetContainer = this.isCIDPatch() ? this.targetCIDContainer(html) : container\n    if(this.isCIDPatch() && !targetContainer){ return }\n\n    let focused = liveSocket.getActiveElement()\n    let {selectionStart, selectionEnd} = focused && DOM.hasSelectionRange(focused) ? focused : {}\n    let phxUpdate = liveSocket.binding(PHX_UPDATE)\n    let phxFeedbackFor = liveSocket.binding(PHX_FEEDBACK_FOR)\n    let disableWith = liveSocket.binding(PHX_DISABLE_WITH)\n    let phxTriggerExternal = liveSocket.binding(PHX_TRIGGER_ACTION)\n    let phxRemove = liveSocket.binding(\"remove\")\n    let added = []\n    let updates = []\n    let appendPrependUpdates = []\n    let pendingRemoves = []\n    let externalFormTriggered = null\n\n    let diffHTML = liveSocket.time(\"premorph container prep\", () => {\n      return this.buildDiffHTML(container, html, phxUpdate, targetContainer)\n    })\n\n    this.trackBefore(\"added\", container)\n    this.trackBefore(\"updated\", container, container)\n\n    liveSocket.time(\"morphdom\", () => {\n      morphdom(targetContainer, diffHTML, {\n        childrenOnly: true,\n        getNodeKey: (node) => {\n          return DOM.isPhxDestroyed(node) ? null : node.id\n        },\n        onBeforeNodeAdded: (el) => {\n          this.trackBefore(\"added\", el)\n          return el\n        },\n        onNodeAdded: (el) => {\n          // hack to fix Safari handling of img srcset and video tags\n          if(el instanceof HTMLImageElement && el.srcset){\n            el.srcset = el.srcset\n          } else if(el instanceof HTMLVideoElement && el.autoplay){\n            el.play()\n          }\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n          //input handling\n          DOM.discardError(targetContainer, el, phxFeedbackFor)\n          // nested view handling\n          if(DOM.isPhxChild(el) && view.ownsElement(el)){\n            this.trackAfter(\"phxChildAdded\", el)\n          }\n          added.push(el)\n        },\n        onNodeDiscarded: (el) => {\n          // nested view handling\n          if(DOM.isPhxChild(el)){ liveSocket.destroyViewByEl(el) }\n          this.trackAfter(\"discarded\", el)\n        },\n        onBeforeNodeDiscarded: (el) => {\n          if(el.getAttribute && el.getAttribute(PHX_PRUNE) !== null){ return true }\n          if(el.parentNode !== null && DOM.isPhxUpdate(el.parentNode, phxUpdate, [\"append\", \"prepend\"]) && el.id){ return false }\n          if(el.getAttribute && el.getAttribute(phxRemove)){\n            pendingRemoves.push(el)\n            return false\n          }\n          if(this.skipCIDSibling(el)){ return false }\n          return true\n        },\n        onElUpdated: (el) => {\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n          updates.push(el)\n        },\n        onBeforeElUpdated: (fromEl, toEl) => {\n          DOM.cleanChildNodes(toEl, phxUpdate)\n          if(this.skipCIDSibling(toEl)){ return false }\n          if(DOM.isIgnored(fromEl, phxUpdate)){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeAttrs(fromEl, toEl, {isIgnored: true})\n            updates.push(fromEl)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n          if(fromEl.type === \"number\" && (fromEl.validity && fromEl.validity.badInput)){ return false }\n          if(!DOM.syncPendingRef(fromEl, toEl, disableWith)){\n            if(DOM.isUploadInput(fromEl)){\n              this.trackBefore(\"updated\", fromEl, toEl)\n              updates.push(fromEl)\n            }\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n\n          // nested view handling\n          if(DOM.isPhxChild(toEl)){\n            let prevSession = fromEl.getAttribute(PHX_SESSION)\n            DOM.mergeAttrs(fromEl, toEl, {exclude: [PHX_STATIC]})\n            if(prevSession !== \"\"){ fromEl.setAttribute(PHX_SESSION, prevSession) }\n            fromEl.setAttribute(PHX_ROOT_ID, this.rootID)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n\n          // input handling\n          DOM.copyPrivates(toEl, fromEl)\n          DOM.discardError(targetContainer, toEl, phxFeedbackFor)\n\n          let isFocusedFormEl = focused && fromEl.isSameNode(focused) && DOM.isFormInput(fromEl)\n          if(isFocusedFormEl){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeFocusedInput(fromEl, toEl)\n            DOM.syncAttrsToProps(fromEl)\n            updates.push(fromEl)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          } else {\n            if(DOM.isPhxUpdate(toEl, phxUpdate, [\"append\", \"prepend\"])){\n              appendPrependUpdates.push(new DOMPostMorphRestorer(fromEl, toEl, toEl.getAttribute(phxUpdate)))\n            }\n            DOM.syncAttrsToProps(toEl)\n            DOM.applyStickyOperations(toEl)\n            this.trackBefore(\"updated\", fromEl, toEl)\n            return true\n          }\n        }\n      })\n    })\n\n    if(liveSocket.isDebugEnabled()){ detectDuplicateIds() }\n\n    if(appendPrependUpdates.length > 0){\n      liveSocket.time(\"post-morph append/prepend restoration\", () => {\n        appendPrependUpdates.forEach(update => update.perform())\n      })\n    }\n\n    liveSocket.silenceEvents(() => DOM.restoreFocus(focused, selectionStart, selectionEnd))\n    DOM.dispatchEvent(document, \"phx:update\")\n    added.forEach(el => this.trackAfter(\"added\", el))\n    updates.forEach(el => this.trackAfter(\"updated\", el))\n\n    if(pendingRemoves.length > 0){\n      liveSocket.transitionRemoves(pendingRemoves)\n      liveSocket.requestDOMUpdate(() => {\n        pendingRemoves.forEach(el => el.remove())\n        this.trackAfter(\"transitionsDiscarded\", pendingRemoves)\n      })\n    }\n\n    if(externalFormTriggered){\n      liveSocket.disconnect()\n      externalFormTriggered.submit()\n    }\n    return true\n  }\n\n  isCIDPatch(){ return this.cidPatch }\n\n  skipCIDSibling(el){\n    return el.nodeType === Node.ELEMENT_NODE && el.getAttribute(PHX_SKIP) !== null\n  }\n\n  targetCIDContainer(html){\n    if(!this.isCIDPatch()){ return }\n    let [first, ...rest] = DOM.findComponentNodeList(this.container, this.targetCID)\n    if(rest.length === 0 && DOM.childNodeLength(html) === 1){\n      return first\n    } else {\n      return first && first.parentNode\n    }\n  }\n\n  // builds HTML for morphdom patch\n  // - for full patches of LiveView or a component with a single\n  //   root node, simply returns the HTML\n  // - for patches of a component with multiple root nodes, the\n  //   parent node becomes the target container and non-component\n  //   siblings are marked as skip.\n  buildDiffHTML(container, html, phxUpdate, targetContainer){\n    let isCIDPatch = this.isCIDPatch()\n    let isCIDWithSingleRoot = isCIDPatch && targetContainer.getAttribute(PHX_COMPONENT) === this.targetCID.toString()\n    if(!isCIDPatch || isCIDWithSingleRoot){\n      return html\n    } else {\n      // component patch with multiple CID roots\n      let diffContainer = null\n      let template = document.createElement(\"template\")\n      diffContainer = DOM.cloneNode(targetContainer)\n      let [firstComponent, ...rest] = DOM.findComponentNodeList(diffContainer, this.targetCID)\n      template.innerHTML = html\n      rest.forEach(el => el.remove())\n      Array.from(diffContainer.childNodes).forEach(child => {\n        // we can only skip trackable nodes with an ID\n        if(child.id && child.nodeType === Node.ELEMENT_NODE && child.getAttribute(PHX_COMPONENT) !== this.targetCID.toString()){\n          child.setAttribute(PHX_SKIP, \"\")\n          child.innerHTML = \"\"\n        }\n      })\n      Array.from(template.content.childNodes).forEach(el => diffContainer.insertBefore(el, firstComponent))\n      firstComponent.remove()\n      return diffContainer.outerHTML\n    }\n  }\n}\n", "import {\n  COMPONENTS,\n  DYNAMICS,\n  TEMPLATES,\n  EVENTS,\n  PHX_COMPONENT,\n  PHX_SKIP,\n  REPLY,\n  STATIC,\n  TITLE\n} from \"./constants\"\n\nimport {\n  isObject,\n  logError,\n  isCid,\n} from \"./utils\"\n\nexport default class Rendered {\n  static extract(diff){\n    let {[REPLY]: reply, [EVENTS]: events, [TITLE]: title} = diff\n    delete diff[REPLY]\n    delete diff[EVENTS]\n    delete diff[TITLE]\n    return {diff, title, reply: reply || null, events: events || []}\n  }\n\n  constructor(viewId, rendered){\n    this.viewId = viewId\n    this.rendered = {}\n    this.mergeDiff(rendered)\n  }\n\n  parentViewId(){ return this.viewId }\n\n  toString(onlyCids){\n    return this.recursiveToString(this.rendered, this.rendered[COMPONENTS], onlyCids)\n  }\n\n  recursiveToString(rendered, components = rendered[COMPONENTS], onlyCids){\n    onlyCids = onlyCids ? new Set(onlyCids) : null\n    let output = {buffer: \"\", components: components, onlyCids: onlyCids}\n    this.toOutputBuffer(rendered, null, output)\n    return output.buffer\n  }\n\n  componentCIDs(diff){ return Object.keys(diff[COMPONENTS] || {}).map(i => parseInt(i)) }\n\n  isComponentOnlyDiff(diff){\n    if(!diff[COMPONENTS]){ return false }\n    return Object.keys(diff).length === 1\n  }\n\n  getComponent(diff, cid){ return diff[COMPONENTS][cid] }\n\n  mergeDiff(diff){\n    let newc = diff[COMPONENTS]\n    let cache = {}\n    delete diff[COMPONENTS]\n    this.rendered = this.mutableMerge(this.rendered, diff)\n    this.rendered[COMPONENTS] = this.rendered[COMPONENTS] || {}\n\n    if(newc){\n      let oldc = this.rendered[COMPONENTS]\n\n      for(let cid in newc){\n        newc[cid] = this.cachedFindComponent(cid, newc[cid], oldc, newc, cache)\n      }\n\n      for(let cid in newc){ oldc[cid] = newc[cid] }\n      diff[COMPONENTS] = newc\n    }\n  }\n\n  cachedFindComponent(cid, cdiff, oldc, newc, cache){\n    if(cache[cid]){\n      return cache[cid]\n    } else {\n      let ndiff, stat, scid = cdiff[STATIC]\n\n      if(isCid(scid)){\n        let tdiff\n\n        if(scid > 0){\n          tdiff = this.cachedFindComponent(scid, newc[scid], oldc, newc, cache)\n        } else {\n          tdiff = oldc[-scid]\n        }\n\n        stat = tdiff[STATIC]\n        ndiff = this.cloneMerge(tdiff, cdiff)\n        ndiff[STATIC] = stat\n      } else {\n        ndiff = cdiff[STATIC] !== undefined ? cdiff : this.cloneMerge(oldc[cid] || {}, cdiff)\n      }\n\n      cache[cid] = ndiff\n      return ndiff\n    }\n  }\n\n  mutableMerge(target, source){\n    if(source[STATIC] !== undefined){\n      return source\n    } else {\n      this.doMutableMerge(target, source)\n      return target\n    }\n  }\n\n  doMutableMerge(target, source){\n    for(let key in source){\n      let val = source[key]\n      let targetVal = target[key]\n      if(isObject(val) && val[STATIC] === undefined && isObject(targetVal)){\n        this.doMutableMerge(targetVal, val)\n      } else {\n        target[key] = val\n      }\n    }\n  }\n\n  cloneMerge(target, source){\n    let merged = {...target, ...source}\n    for(let key in merged){\n      let val = source[key]\n      let targetVal = target[key]\n      if(isObject(val) && val[STATIC] === undefined && isObject(targetVal)){\n        merged[key] = this.cloneMerge(targetVal, val)\n      }\n    }\n    return merged\n  }\n\n  componentToString(cid){ return this.recursiveCIDToString(this.rendered[COMPONENTS], cid) }\n\n  pruneCIDs(cids){\n    cids.forEach(cid => delete this.rendered[COMPONENTS][cid])\n  }\n\n  // private\n\n  get(){ return this.rendered }\n\n  isNewFingerprint(diff = {}){ return !!diff[STATIC] }\n\n  templateStatic(part, templates){\n    if(typeof (part) === \"number\") {\n      return templates[part]\n    } else {\n      return part\n    }\n  }\n\n  toOutputBuffer(rendered, templates, output){\n    if(rendered[DYNAMICS]){ return this.comprehensionToBuffer(rendered, templates, output) }\n    let {[STATIC]: statics} = rendered\n    statics = this.templateStatic(statics, templates)\n\n    output.buffer += statics[0]\n    for(let i = 1; i < statics.length; i++){\n      this.dynamicToBuffer(rendered[i - 1], templates, output)\n      output.buffer += statics[i]\n    }\n  }\n\n  comprehensionToBuffer(rendered, templates, output){\n    let {[DYNAMICS]: dynamics, [STATIC]: statics} = rendered\n    statics = this.templateStatic(statics, templates)\n    let compTemplates = rendered[TEMPLATES]\n\n    for(let d = 0; d < dynamics.length; d++){\n      let dynamic = dynamics[d]\n      output.buffer += statics[0]\n      for(let i = 1; i < statics.length; i++){\n        this.dynamicToBuffer(dynamic[i - 1], compTemplates, output)\n        output.buffer += statics[i]\n      }\n    }\n  }\n\n  dynamicToBuffer(rendered, templates, output){\n    if(typeof (rendered) === \"number\"){\n      output.buffer += this.recursiveCIDToString(output.components, rendered, output.onlyCids)\n    } else if(isObject(rendered)){\n      this.toOutputBuffer(rendered, templates, output)\n    } else {\n      output.buffer += rendered\n    }\n  }\n\n  recursiveCIDToString(components, cid, onlyCids){\n    let component = components[cid] || logError(`no component for CID ${cid}`, components)\n    let template = document.createElement(\"template\")\n    template.innerHTML = this.recursiveToString(component, components, onlyCids)\n    let container = template.content\n    let skip = onlyCids && !onlyCids.has(cid)\n\n    let [hasChildNodes, hasChildComponents] =\n      Array.from(container.childNodes).reduce(([hasNodes, hasComponents], child, i) => {\n        if(child.nodeType === Node.ELEMENT_NODE){\n          if(child.getAttribute(PHX_COMPONENT)){\n            return [hasNodes, true]\n          }\n          child.setAttribute(PHX_COMPONENT, cid)\n          if(!child.id){ child.id = `${this.parentViewId()}-${cid}-${i}` }\n          if(skip){\n            child.setAttribute(PHX_SKIP, \"\")\n            child.innerHTML = \"\"\n          }\n          return [true, hasComponents]\n        } else {\n          if(child.nodeValue.trim() !== \"\"){\n            logError(\"only HTML element tags are allowed at the root of components.\\n\\n\" +\n              `got: \"${child.nodeValue.trim()}\"\\n\\n` +\n              \"within:\\n\", template.innerHTML.trim())\n            child.replaceWith(this.createSpan(child.nodeValue, cid))\n            return [true, hasComponents]\n          } else {\n            child.remove()\n            return [hasNodes, hasComponents]\n          }\n        }\n      }, [false, false])\n\n    if(!hasChildNodes && !hasChildComponents){\n      logError(\"expected at least one HTML element tag inside a component, but the component is empty:\\n\",\n        template.innerHTML.trim())\n      return this.createSpan(\"\", cid).outerHTML\n    } else if(!hasChildNodes && hasChildComponents){\n      logError(\"expected at least one HTML element tag directly inside a component, but only subcomponents were found. A component must render at least one HTML tag directly inside itself.\",\n        template.innerHTML.trim())\n      return template.innerHTML\n    } else {\n      return template.innerHTML\n    }\n  }\n\n  createSpan(text, cid){\n    let span = document.createElement(\"span\")\n    span.innerText = text\n    span.setAttribute(PHX_COMPONENT, cid)\n    return span\n  }\n}\n", "let viewHookID = 1\nexport default class ViewHook {\n  static makeID(){ return viewHookID++ }\n  static elementID(el){ return el.phxHookId }\n\n  constructor(view, el, callbacks){\n    this.__view = view\n    this.__liveSocket = view.liveSocket\n    this.__callbacks = callbacks\n    this.__listeners = new Set()\n    this.__isDisconnected = false\n    this.el = el\n    this.el.phxHookId = this.constructor.makeID()\n    for(let key in this.__callbacks){ this[key] = this.__callbacks[key] }\n  }\n\n  __mounted(){ this.mounted && this.mounted() }\n  __updated(){ this.updated && this.updated() }\n  __beforeUpdate(){ this.beforeUpdate && this.beforeUpdate() }\n  __destroyed(){ this.destroyed && this.destroyed() }\n  __reconnected(){\n    if(this.__isDisconnected){\n      this.__isDisconnected = false\n      this.reconnected && this.reconnected()\n    }\n  }\n  __disconnected(){\n    this.__isDisconnected = true\n    this.disconnected && this.disconnected()\n  }\n\n  pushEvent(event, payload = {}, onReply = function (){ }){\n    return this.__view.pushHookEvent(null, event, payload, onReply)\n  }\n\n  pushEventTo(phxTarget, event, payload = {}, onReply = function (){ }){\n    return this.__view.withinTargets(phxTarget, (view, targetCtx) => {\n      return view.pushHookEvent(targetCtx, event, payload, onReply)\n    })\n  }\n\n  handleEvent(event, callback){\n    let callbackRef = (customEvent, bypass) => bypass ? event : callback(customEvent.detail)\n    window.addEventListener(`phx:${event}`, callbackRef)\n    this.__listeners.add(callbackRef)\n    return callbackRef\n  }\n\n  removeHandleEvent(callbackRef){\n    let event = callbackRef(null, true)\n    window.removeEventListener(`phx:${event}`, callbackRef)\n    this.__listeners.delete(callbackRef)\n  }\n\n  upload(name, files){\n    return this.__view.dispatchUploads(name, files)\n  }\n\n  uploadTo(phxTarget, name, files){\n    return this.__view.withinTargets(phxTarget, view => view.dispatchUploads(name, files))\n  }\n\n  __cleanup__(){\n    this.__listeners.forEach(callbackRef => this.removeHandleEvent(callbackRef))\n  }\n}\n", "import {\n  BEFORE_UNLOAD_LOADER_TIMEOUT,\n  CHECKABLE_INPUTS,\n  CONSECUTIVE_RELOADS,\n  PHX_AUTO_RECOVER,\n  PHX_COMPONENT,\n  PHX_CONNECTED_CLASS,\n  PHX_DISABLE_WITH,\n  PHX_DISABLE_WITH_RESTORE,\n  PHX_DISABLED,\n  PHX_DISCONNECTED_CLASS,\n  PHX_EVENT_CLASSES,\n  PHX_ERROR_CLASS,\n  PHX_FEEDBACK_FOR,\n  PHX_HAS_SUBMITTED,\n  PHX_HOOK,\n  PHX_PAGE_LOADING,\n  PHX_PARENT_ID,\n  PHX_PROGRESS,\n  PHX_READONLY,\n  PHX_REF,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_TRACK_STATIC,\n  PHX_TRACK_UPLOADS,\n  PHX_UPDATE,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  PUSH_TIMEOUT,\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  isEmpty,\n  isEqualObj,\n  logError,\n  maybe,\n  isCid,\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport DOMPatch from \"./dom_patch\"\nimport LiveUploader from \"./live_uploader\"\nimport Rendered from \"./rendered\"\nimport ViewHook from \"./view_hook\"\n\nlet serializeForm = (form, meta = {}) => {\n  let formData = new FormData(form)\n  let toRemove = []\n\n  formData.forEach((val, key, _index) => {\n    if(val instanceof File){ toRemove.push(key) }\n  })\n\n  // Cleanup after building fileData\n  toRemove.forEach(key => formData.delete(key))\n\n  let params = new URLSearchParams()\n  for(let [key, val] of formData.entries()){ params.append(key, val) }\n  for(let metaKey in meta){ params.append(metaKey, meta[metaKey]) }\n\n  return params.toString()\n}\n\nexport default class View {\n  constructor(el, liveSocket, parentView, flash){\n    this.liveSocket = liveSocket\n    this.flash = flash\n    this.parent = parentView\n    this.root = parentView ? parentView.root : this\n    this.el = el\n    this.id = this.el.id\n    this.ref = 0\n    this.childJoins = 0\n    this.loaderTimer = null\n    this.pendingDiffs = []\n    this.pruningCIDs = []\n    this.redirect = false\n    this.href = null\n    this.joinCount = this.parent ? this.parent.joinCount - 1 : 0\n    this.joinPending = true\n    this.destroyed = false\n    this.joinCallback = function (){ }\n    this.stopCallback = function (){ }\n    this.pendingJoinOps = this.parent ? null : []\n    this.viewHooks = {}\n    this.uploaders = {}\n    this.formSubmits = []\n    this.children = this.parent ? null : {}\n    this.root.children[this.id] = {}\n    this.channel = this.liveSocket.channel(`lv:${this.id}`, () => {\n      return {\n        redirect: this.redirect ? this.href : undefined,\n        url: this.redirect ? undefined : this.href || undefined,\n        params: this.connectParams(),\n        session: this.getSession(),\n        static: this.getStatic(),\n        flash: this.flash\n      }\n    })\n    this.showLoader(this.liveSocket.loaderTimeout)\n    this.bindChannel()\n  }\n\n  setHref(href){ this.href = href }\n\n  setRedirect(href){\n    this.redirect = true\n    this.href = href\n  }\n\n  isMain(){ return this.liveSocket.main === this }\n\n  connectParams(){\n    let params = this.liveSocket.params(this.el)\n    let manifest =\n      DOM.all(document, `[${this.binding(PHX_TRACK_STATIC)}]`)\n        .map(node => node.src || node.href).filter(url => typeof (url) === \"string\")\n\n    if(manifest.length > 0){ params[\"_track_static\"] = manifest }\n    params[\"_mounts\"] = this.joinCount\n\n    return params\n  }\n\n  isConnected(){ return this.channel.canPush() }\n\n  getSession(){ return this.el.getAttribute(PHX_SESSION) }\n\n  getStatic(){\n    let val = this.el.getAttribute(PHX_STATIC)\n    return val === \"\" ? null : val\n  }\n\n  destroy(callback = function (){ }){\n    this.destroyAllChildren()\n    this.destroyed = true\n    delete this.root.children[this.id]\n    if(this.parent){ delete this.root.children[this.parent.id][this.id] }\n    clearTimeout(this.loaderTimer)\n    let onFinished = () => {\n      callback()\n      for(let id in this.viewHooks){\n        this.destroyHook(this.viewHooks[id])\n      }\n    }\n\n    DOM.markPhxChildDestroyed(this.el)\n\n    this.log(\"destroyed\", () => [\"the child has been removed from the parent\"])\n    this.channel.leave()\n      .receive(\"ok\", onFinished)\n      .receive(\"error\", onFinished)\n      .receive(\"timeout\", onFinished)\n  }\n\n  setContainerClasses(...classes){\n    this.el.classList.remove(\n      PHX_CONNECTED_CLASS,\n      PHX_DISCONNECTED_CLASS,\n      PHX_ERROR_CLASS\n    )\n    this.el.classList.add(...classes)\n  }\n\n  isLoading(){ return this.el.classList.contains(PHX_DISCONNECTED_CLASS) }\n\n  showLoader(timeout){\n    clearTimeout(this.loaderTimer)\n    if(timeout){\n      this.loaderTimer = setTimeout(() => this.showLoader(), timeout)\n    } else {\n      for(let id in this.viewHooks){ this.viewHooks[id].__disconnected() }\n      this.setContainerClasses(PHX_DISCONNECTED_CLASS)\n    }\n  }\n\n  hideLoader(){\n    clearTimeout(this.loaderTimer)\n    this.setContainerClasses(PHX_CONNECTED_CLASS)\n  }\n\n  triggerReconnected(){\n    for(let id in this.viewHooks){ this.viewHooks[id].__reconnected() }\n  }\n\n  log(kind, msgCallback){\n    this.liveSocket.log(this, kind, msgCallback)\n  }\n\n  withinTargets(phxTarget, callback){\n    if(phxTarget instanceof HTMLElement){\n      return this.liveSocket.owner(phxTarget, view => callback(view, phxTarget))\n    }\n\n    if(/^(0|[1-9]\\d*)$/.test(phxTarget)){\n      let targets = DOM.findComponentNodeList(this.el, phxTarget)\n      if(targets.length === 0){\n        logError(`no component found matching phx-target of ${phxTarget}`)\n      } else {\n        callback(this, targets[0])\n      }\n    } else {\n      let targets = Array.from(document.querySelectorAll(phxTarget))\n      if(targets.length === 0){ logError(`nothing found matching the phx-target selector \"${phxTarget}\"`) }\n      targets.forEach(target => this.liveSocket.owner(target, view => callback(view, target)))\n    }\n  }\n\n  applyDiff(type, rawDiff, callback){\n    this.log(type, () => [\"\", clone(rawDiff)])\n    let {diff, reply, events, title} = Rendered.extract(rawDiff)\n    if(title){ DOM.putTitle(title) }\n\n    callback({diff, reply, events})\n    return reply\n  }\n\n  onJoin(resp){\n    console.log(resp);\n    let {rendered, container} = resp\n    if(container){\n      let [tag, attrs] = container\n      this.el = DOM.replaceRootContainer(this.el, tag, attrs)\n    }\n    this.childJoins = 0\n    this.joinPending = true\n    this.flash = null\n\n    Browser.dropLocal(this.liveSocket.localStorage, window.location.pathname, CONSECUTIVE_RELOADS)\n    this.applyDiff(\"mount\", rendered, ({diff, events}) => {\n      this.rendered = new Rendered(this.id, diff)\n      let html = this.renderContainer(null, \"join\");\n      console.log(html);\n      this.dropPendingRefs()\n      let forms = this.formsForRecovery(html);\n      console.log(forms);\n      this.joinCount++\n\n      if(forms.length > 0){\n        forms.forEach(([form, newForm, newCid], i) => {\n          this.pushFormRecovery(form, newCid, resp => {\n            if(i === forms.length - 1){\n              this.onJoinComplete(resp, html, events)\n            }\n          })\n        })\n      } else {\n        this.onJoinComplete(resp, html, events)\n      }\n    })\n  }\n\n  dropPendingRefs(){ DOM.all(this.el, `[${PHX_REF}]`, el => el.removeAttribute(PHX_REF)) }\n\n  onJoinComplete({live_patch}, html, events){\n    // In order to provide a better experience, we want to join\n    // all LiveViews first and only then apply their patches.\n    if(this.joinCount > 1 || (this.parent && !this.parent.isJoinPending())){\n      return this.applyJoinPatch(live_patch, html, events)\n    }\n\n    // One downside of this approach is that we need to find phxChildren\n    // in the html fragment, instead of directly on the DOM. The fragment\n    // also does not include PHX_STATIC, so we need to copy it over from\n    // the DOM.\n    let newChildren = DOM.findPhxChildrenInFragment(html, this.id).filter(toEl => {\n      let fromEl = toEl.id && this.el.querySelector(`[id=\"${toEl.id}\"]`)\n      let phxStatic = fromEl && fromEl.getAttribute(PHX_STATIC)\n      if(phxStatic){ toEl.setAttribute(PHX_STATIC, phxStatic) }\n      return this.joinChild(toEl)\n    })\n\n    if(newChildren.length === 0){\n      if(this.parent){\n        this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, events)])\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n        this.applyJoinPatch(live_patch, html, events)\n      }\n    } else {\n      this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, events)])\n    }\n  }\n\n  attachTrueDocEl(){\n    this.el = DOM.byId(this.id)\n    this.el.setAttribute(PHX_ROOT_ID, this.root.id)\n  }\n\n  dispatchEvents(events){\n    events.forEach(([event, payload]) => {\n      window.dispatchEvent(new CustomEvent(`phx:hook:${event}`, {detail: payload}))\n    })\n  }\n\n  applyJoinPatch(live_patch, html, events){\n    console.log('applying join patch');\n    this.attachTrueDocEl()\n    let patch = new DOMPatch(this, this.el.renderRoot, this.id, html, null)\n    patch.markPrunableContentForRemoval()\n    this.performPatch(patch, false)\n    this.joinNewChildren()\n    DOM.all(this.el, `[${this.binding(PHX_HOOK)}], [data-phx-${PHX_HOOK}]`, hookEl => {\n      let hook = this.addHook(hookEl)\n      if(hook){ hook.__mounted() }\n    })\n\n    this.joinPending = false\n    this.dispatchEvents(events)\n    this.applyPendingUpdates()\n\n    if(live_patch){\n      let {kind, to} = live_patch\n      this.liveSocket.historyPatch(to, kind)\n    }\n    this.hideLoader()\n    if(this.joinCount > 1){ this.triggerReconnected() }\n    this.stopCallback()\n  }\n\n  triggerBeforeUpdateHook(fromEl, toEl){\n    this.liveSocket.triggerDOM(\"onBeforeElUpdated\", [fromEl, toEl])\n    let hook = this.getHook(fromEl)\n    let isIgnored = hook && DOM.isIgnored(fromEl, this.binding(PHX_UPDATE))\n    if(hook && !fromEl.isEqualNode(toEl) && !(isIgnored && isEqualObj(fromEl.dataset, toEl.dataset))){\n      hook.__beforeUpdate()\n      return hook\n    }\n  }\n\n  performPatch(patch, pruneCids){\n    let destroyedCIDs = []\n    let phxChildrenAdded = false\n    let updatedHookIds = new Set()\n\n    patch.after(\"added\", el => {\n      this.liveSocket.triggerDOM(\"onNodeAdded\", [el])\n\n      let newHook = this.addHook(el)\n      if(newHook){ newHook.__mounted() }\n    })\n\n    patch.after(\"phxChildAdded\", _el => phxChildrenAdded = true)\n\n    patch.before(\"updated\", (fromEl, toEl) => {\n      let hook = this.triggerBeforeUpdateHook(fromEl, toEl)\n      if(hook){ updatedHookIds.add(fromEl.id) }\n    })\n\n    patch.after(\"updated\", el => {\n      if(updatedHookIds.has(el.id)){ this.getHook(el).__updated() }\n    })\n\n    patch.after(\"discarded\", (el) => {\n      let cid = this.componentID(el)\n      if(isCid(cid) && destroyedCIDs.indexOf(cid) === -1){ destroyedCIDs.push(cid) }\n      let hook = this.getHook(el)\n      hook && this.destroyHook(hook)\n    })\n\n    patch.perform()\n\n    // We should not pruneCids on joins. Otherwise, in case of\n    // rejoins, we may notify cids that no longer belong to the\n    // current LiveView to be removed.\n    if(pruneCids){\n      this.maybePushComponentsDestroyed(destroyedCIDs)\n    }\n\n    return phxChildrenAdded\n  }\n\n  joinNewChildren(){\n    DOM.findPhxChildren(this.el, this.id).forEach(el => this.joinChild(el))\n  }\n\n  getChildById(id){ return this.root.children[this.id][id] }\n\n  getDescendentByEl(el){\n    if(el.id === this.id){\n      return this\n    } else {\n      return this.children[el.getAttribute(PHX_PARENT_ID)][el.id]\n    }\n  }\n\n  destroyDescendent(id){\n    for(let parentId in this.root.children){\n      for(let childId in this.root.children[parentId]){\n        if(childId === id){ return this.root.children[parentId][childId].destroy() }\n      }\n    }\n  }\n\n  joinChild(el){\n    let child = this.getChildById(el.id)\n    if(!child){\n      let view = new View(el, this.liveSocket, this)\n      this.root.children[this.id][view.id] = view\n      view.join()\n      this.childJoins++\n      return true\n    }\n  }\n\n  isJoinPending(){ return this.joinPending }\n\n  ackJoin(_child){\n    this.childJoins--\n\n    if(this.childJoins === 0){\n      if(this.parent){\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n      }\n    }\n  }\n\n  onAllChildJoinsComplete(){\n    this.joinCallback()\n    this.pendingJoinOps.forEach(([view, op]) => {\n      if(!view.isDestroyed()){ op() }\n    })\n    this.pendingJoinOps = []\n  }\n\n  update(diff, events){\n    if(this.isJoinPending() || this.liveSocket.hasPendingLink()){\n      return this.pendingDiffs.push({diff, events})\n    }\n\n    this.rendered.mergeDiff(diff)\n    let phxChildrenAdded = false\n\n    // When the diff only contains component diffs, then walk components\n    // and patch only the parent component containers found in the diff.\n    // Otherwise, patch entire LV container.\n    if(this.rendered.isComponentOnlyDiff(diff)){\n      this.liveSocket.time(\"component patch complete\", () => {\n        let parentCids = DOM.findParentCIDs(this.el, this.rendered.componentCIDs(diff))\n        parentCids.forEach(parentCID => {\n          if(this.componentPatch(this.rendered.getComponent(diff, parentCID), parentCID)){ phxChildrenAdded = true }\n        })\n      })\n    } else if(!isEmpty(diff)){\n      this.liveSocket.time(\"full patch complete\", () => {\n        let html = this.renderContainer(diff, \"update\")\n        let patch = new DOMPatch(this, this.el.renderRoot, this.id, html, null)\n        phxChildrenAdded = this.performPatch(patch, true)\n      })\n    }\n\n    this.dispatchEvents(events)\n    if(phxChildrenAdded){ this.joinNewChildren() }\n  }\n\n  renderContainer(diff, kind){\n    return this.liveSocket.time(`toString diff (${kind})`, () => {\n      let tag = this.el.tagName\n      // Don't skip any component in the diff nor any marked as pruned\n      // (as they may have been added back)\n      let cids = diff ? this.rendered.componentCIDs(diff).concat(this.pruningCIDs) : null\n      let html = this.rendered.toString(cids)\n      return `<${tag}>${html}</${tag}>`\n    })\n  }\n\n  componentPatch(diff, cid){\n    if(isEmpty(diff)) return false\n    let html = this.rendered.componentToString(cid)\n    let patch = new DOMPatch(this, this.el.renderRoot, this.id, html, cid)\n    let childrenAdded = this.performPatch(patch, true)\n    return childrenAdded\n  }\n\n  getHook(el){ return this.viewHooks[ViewHook.elementID(el)] }\n\n  addHook(el){\n    if(ViewHook.elementID(el) || !el.getAttribute){ return }\n    let hookName = el.getAttribute(`data-phx-${PHX_HOOK}`) || el.getAttribute(this.binding(PHX_HOOK))\n    if(hookName && !this.ownsElement(el)){ return }\n    let callbacks = this.liveSocket.getHookCallbacks(hookName)\n\n    if(callbacks){\n      if(!el.id){ logError(`no DOM ID for hook \"${hookName}\". Hooks require a unique ID on each element.`, el) }\n      let hook = new ViewHook(this, el, callbacks)\n      this.viewHooks[ViewHook.elementID(hook.el)] = hook\n      return hook\n    } else if(hookName !== null){\n      logError(`unknown hook found for \"${hookName}\"`, el)\n    }\n  }\n\n  destroyHook(hook){\n    hook.__destroyed()\n    hook.__cleanup__()\n    delete this.viewHooks[ViewHook.elementID(hook.el)]\n  }\n\n  applyPendingUpdates(){\n    this.pendingDiffs.forEach(({diff, events}) => this.update(diff, events))\n    this.pendingDiffs = []\n  }\n\n  onChannel(event, cb){\n    this.liveSocket.onChannel(this.channel, event, resp => {\n      if(this.isJoinPending()){\n        this.root.pendingJoinOps.push([this, () => cb(resp)])\n      } else {\n        cb(resp)\n      }\n    })\n  }\n\n  bindChannel(){\n    // The diff event should be handled by the regular update operations.\n    // All other operations are queued to be applied only after join.\n    this.liveSocket.onChannel(this.channel, \"diff\", (rawDiff) => {\n      this.applyDiff(\"update\", rawDiff, ({diff, events}) => this.update(diff, events))\n    })\n    this.onChannel(\"redirect\", ({to, flash}) => this.onRedirect({to, flash}))\n    this.onChannel(\"live_patch\", (redir) => this.onLivePatch(redir))\n    this.onChannel(\"live_redirect\", (redir) => this.onLiveRedirect(redir))\n    this.channel.onError(reason => this.onError(reason))\n    this.channel.onClose(reason => this.onClose(reason))\n  }\n\n  destroyAllChildren(){\n    for(let id in this.root.children[this.id]){\n      this.getChildById(id).destroy()\n    }\n  }\n\n  onLiveRedirect(redir){\n    let {to, kind, flash} = redir\n    let url = this.expandURL(to)\n    this.liveSocket.historyRedirect(url, kind, flash)\n  }\n\n  onLivePatch(redir){\n    let {to, kind} = redir\n    this.href = this.expandURL(to)\n    this.liveSocket.historyPatch(to, kind)\n  }\n\n  expandURL(to){\n    return to.startsWith(\"/\") ? `${window.location.protocol}//${window.location.host}${to}` : to\n  }\n\n  onRedirect({to, flash}){ this.liveSocket.redirect(to, flash) }\n\n  isDestroyed(){ return this.destroyed }\n\n  join(callback){\n    if(!this.parent){\n      this.stopCallback = this.liveSocket.withPageLoading({to: this.href, kind: \"initial\"})\n    }\n    this.joinCallback = () => callback && callback(this.joinCount)\n    this.liveSocket.wrapPush(this, {timeout: false}, () => {\n      return this.channel.join()\n        .receive(\"ok\", data => !this.isDestroyed() && this.onJoin(data))\n        .receive(\"error\", resp => !this.isDestroyed() && this.onJoinError(resp))\n        .receive(\"timeout\", () => !this.isDestroyed() && this.onJoinError({reason: \"timeout\"}))\n    })\n  }\n\n  onJoinError(resp){\n    console.log(resp);\n    if(resp.reason === \"unauthorized\" || resp.reason === \"stale\"){\n      this.log(\"error\", () => [\"unauthorized live_redirect. Falling back to page request\", resp])\n      return this.onRedirect({to: this.href})\n    }\n    if(resp.redirect || resp.live_redirect){\n      this.joinPending = false\n      this.channel.leave()\n    }\n    if(resp.redirect){ return this.onRedirect(resp.redirect) }\n    if(resp.live_redirect){ return this.onLiveRedirect(resp.live_redirect) }\n    this.log(\"error\", () => [\"unable to join\", resp])\n    return this.liveSocket.reloadWithJitter(this)\n  }\n\n  onClose(reason){\n    if(this.isDestroyed()){ return }\n    if((this.isJoinPending() && document.visibilityState !== \"hidden\") ||\n      (this.liveSocket.hasPendingLink() && reason !== \"leave\")){\n\n      return this.liveSocket.reloadWithJitter(this)\n    }\n    this.destroyAllChildren()\n    this.liveSocket.dropActiveElement(this)\n    // document.activeElement can be null in Internet Explorer 11\n    if(document.activeElement){ document.activeElement.blur() }\n    if(this.liveSocket.isUnloaded()){\n      this.showLoader(BEFORE_UNLOAD_LOADER_TIMEOUT)\n    }\n  }\n\n  onError(reason){\n    this.onClose(reason)\n    this.log(\"error\", () => [\"view crashed\", reason])\n    if(!this.liveSocket.isUnloaded()){ this.displayError() }\n  }\n\n  displayError(){\n    if(this.isMain()){ DOM.dispatchEvent(window, \"phx:page-loading-start\", {to: this.href, kind: \"error\"}) }\n    this.showLoader()\n    this.setContainerClasses(PHX_DISCONNECTED_CLASS, PHX_ERROR_CLASS)\n  }\n\n  pushWithReply(refGenerator, event, payload, onReply = function (){ }){\n    if(!this.isConnected()){ return }\n\n    let [ref, [el]] = refGenerator ? refGenerator() : [null, []]\n    let onLoadingDone = function (){ }\n    if(el && (el.getAttribute(this.binding(PHX_PAGE_LOADING)) !== null)){\n      onLoadingDone = this.liveSocket.withPageLoading({kind: \"element\", target: el})\n    }\n\n    if(typeof (payload.cid) !== \"number\"){ delete payload.cid }\n    return (\n      this.liveSocket.wrapPush(this, {timeout: true}, () => {\n        return this.channel.push(event, payload, PUSH_TIMEOUT).receive(\"ok\", resp => {\n          let hookReply = null\n          if(ref !== null){ this.undoRefs(ref) }\n          if(resp.diff){\n            hookReply = this.applyDiff(\"update\", resp.diff, ({diff, events}) => {\n              this.update(diff, events)\n            })\n          }\n          if(resp.redirect){ this.onRedirect(resp.redirect) }\n          if(resp.live_patch){ this.onLivePatch(resp.live_patch) }\n          if(resp.live_redirect){ this.onLiveRedirect(resp.live_redirect) }\n          onLoadingDone()\n          onReply(resp, hookReply)\n        })\n      })\n    )\n  }\n\n  undoRefs(ref){\n    DOM.all(this.el.renderRoot, `[${PHX_REF}=\"${ref}\"]`, el => {\n      let disabledVal = el.getAttribute(PHX_DISABLED)\n      // remove refs\n      el.removeAttribute(PHX_REF)\n      // restore inputs\n      if(el.getAttribute(PHX_READONLY) !== null){\n        el.readOnly = false\n        el.removeAttribute(PHX_READONLY)\n      }\n      if(disabledVal !== null){\n        el.disabled = disabledVal === \"true\" ? true : false\n        el.removeAttribute(PHX_DISABLED)\n      }\n      // remove classes\n      PHX_EVENT_CLASSES.forEach(className => DOM.removeClass(el, className))\n      // restore disables\n      let disableRestore = el.getAttribute(PHX_DISABLE_WITH_RESTORE)\n      if(disableRestore !== null){\n        el.innerText = disableRestore\n        el.removeAttribute(PHX_DISABLE_WITH_RESTORE)\n      }\n      let toEl = DOM.private(el, PHX_REF)\n      if(toEl){\n        let hook = this.triggerBeforeUpdateHook(el, toEl)\n        DOMPatch.patchEl(el, toEl, this.liveSocket.getActiveElement())\n        if(hook){ hook.__updated() }\n        DOM.deletePrivate(el, PHX_REF)\n      }\n    })\n  }\n\n  putRef(elements, event){\n    let newRef = this.ref++\n    let disableWith = this.binding(PHX_DISABLE_WITH)\n\n    elements.forEach(el => {\n      el.classList.add(`phx-${event}-loading`)\n      el.setAttribute(PHX_REF, newRef)\n      let disableText = el.getAttribute(disableWith)\n      if(disableText !== null){\n        if(!el.getAttribute(PHX_DISABLE_WITH_RESTORE)){\n          el.setAttribute(PHX_DISABLE_WITH_RESTORE, el.innerText)\n        }\n        el.innerText = disableText\n      }\n    })\n    return [newRef, elements]\n  }\n\n  componentID(el){\n    let cid = el.getAttribute && el.getAttribute(PHX_COMPONENT)\n    return cid ? parseInt(cid) : null\n  }\n\n  targetComponentID(target, targetCtx){\n    if(target.getAttribute(this.binding(\"target\"))){\n      return this.closestComponentID(targetCtx)\n    } else {\n      return null\n    }\n  }\n\n  closestComponentID(targetCtx){\n    if(targetCtx){\n      return maybe(targetCtx.closest(`[${PHX_COMPONENT}]`), el => this.ownsElement(el) && this.componentID(el))\n    } else {\n      return null\n    }\n  }\n\n  pushHookEvent(targetCtx, event, payload, onReply){\n    if(!this.isConnected()){\n      this.log(\"hook\", () => [\"unable to push hook event. LiveView not connected\", event, payload])\n      return false\n    }\n    let [ref, els] = this.putRef([], \"hook\")\n    this.pushWithReply(() => [ref, els], \"event\", {\n      type: \"hook\",\n      event: event,\n      value: payload,\n      cid: this.closestComponentID(targetCtx)\n    }, (resp, reply) => onReply(reply, ref))\n\n    return ref\n  }\n\n  extractMeta(el, meta){\n    let prefix = this.binding(\"value-\")\n    for(let i = 0; i < el.attributes.length; i++){\n      let name = el.attributes[i].name\n      if(name.startsWith(prefix)){ meta[name.replace(prefix, \"\")] = el.getAttribute(name) }\n    }\n    if(el.value !== undefined){\n      meta.value = el.value\n\n      if(el.tagName === \"INPUT\" && CHECKABLE_INPUTS.indexOf(el.type) >= 0 && !el.checked){\n        delete meta.value\n      }\n    }\n    return meta\n  }\n\n  pushEvent(type, el, targetCtx, phxEvent, meta){\n    this.pushWithReply(() => this.putRef([el], type), \"event\", {\n      type: type,\n      event: phxEvent,\n      value: this.extractMeta(el, meta),\n      cid: this.targetComponentID(el, targetCtx)\n    })\n  }\n\n  pushKey(keyElement, targetCtx, kind, phxEvent, meta){\n    this.pushWithReply(() => this.putRef([keyElement], kind), \"event\", {\n      type: kind,\n      event: phxEvent,\n      value: this.extractMeta(keyElement, meta),\n      cid: this.targetComponentID(keyElement, targetCtx)\n    })\n  }\n\n  pushFileProgress(fileEl, entryRef, progress, onReply = function (){ }){\n    this.liveSocket.withinOwners(fileEl.form, (view, targetCtx) => {\n      view.pushWithReply(null, \"progress\", {\n        event: fileEl.getAttribute(view.binding(PHX_PROGRESS)),\n        ref: fileEl.getAttribute(PHX_UPLOAD_REF),\n        entry_ref: entryRef,\n        progress: progress,\n        cid: view.targetComponentID(fileEl.form, targetCtx)\n      }, onReply)\n    })\n  }\n\n  pushInput(inputEl, targetCtx, forceCid, phxEvent, eventTarget, callback){\n    let uploads\n    let cid = isCid(forceCid) ? forceCid : this.targetComponentID(inputEl.form, targetCtx)\n    let refGenerator = () => this.putRef([inputEl, inputEl.form], \"change\")\n    let formData = serializeForm(inputEl.form, {_target: eventTarget.name})\n    if(DOM.isUploadInput(inputEl) && inputEl.files && inputEl.files.length > 0){\n      LiveUploader.trackFiles(inputEl, Array.from(inputEl.files))\n    }\n    uploads = LiveUploader.serializeUploads(inputEl)\n    let event = {\n      type: \"form\",\n      event: phxEvent,\n      value: formData,\n      uploads: uploads,\n      cid: cid\n    }\n    this.pushWithReply(refGenerator, \"event\", event, resp => {\n      DOM.showError(inputEl, this.liveSocket.binding(PHX_FEEDBACK_FOR))\n      if(DOM.isUploadInput(inputEl) && inputEl.getAttribute(\"data-phx-auto-upload\") !== null){\n        if(LiveUploader.filesAwaitingPreflight(inputEl).length > 0){\n          let [ref, _els] = refGenerator()\n          this.uploadFiles(inputEl.form, targetCtx, ref, cid, (_uploads) => {\n            callback && callback(resp)\n            this.triggerAwaitingSubmit(inputEl.form)\n          })\n        }\n      } else {\n        callback && callback(resp)\n      }\n    })\n  }\n\n  triggerAwaitingSubmit(formEl){\n    let awaitingSubmit = this.getScheduledSubmit(formEl)\n    if(awaitingSubmit){\n      let [_el, _ref, callback] = awaitingSubmit\n      this.cancelSubmit(formEl)\n      callback()\n    }\n  }\n\n  getScheduledSubmit(formEl){\n    return this.formSubmits.find(([el, _callback]) => el.isSameNode(formEl))\n  }\n\n  scheduleSubmit(formEl, ref, callback){\n    if(this.getScheduledSubmit(formEl)){ return true }\n    this.formSubmits.push([formEl, ref, callback])\n  }\n\n  cancelSubmit(formEl){\n    this.formSubmits = this.formSubmits.filter(([el, ref, _callback]) => {\n      if(el.isSameNode(formEl)){\n        this.undoRefs(ref)\n        return false\n      } else {\n        return true\n      }\n    })\n  }\n\n  pushFormSubmit(formEl, targetCtx, phxEvent, onReply){\n    let filterIgnored = el => {\n      let userIgnored = closestPhxBinding(el, `${this.binding(PHX_UPDATE)}=ignore`, el.form)\n      return !(userIgnored || closestPhxBinding(el, \"data-phx-update=ignore\", el.form))\n    }\n    let filterDisables = el => {\n      return el.hasAttribute(this.binding(PHX_DISABLE_WITH))\n    }\n    let filterButton = el => el.tagName == \"BUTTON\"\n\n    let filterInput = el => [\"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(el.tagName)\n\n    let refGenerator = () => {\n      let formElements = Array.from(formEl.elements)\n      let disables = formElements.filter(filterDisables)\n      let buttons = formElements.filter(filterButton).filter(filterIgnored)\n      let inputs = formElements.filter(filterInput).filter(filterIgnored)\n\n      buttons.forEach(button => {\n        button.setAttribute(PHX_DISABLED, button.disabled)\n        button.disabled = true\n      })\n      inputs.forEach(input => {\n        input.setAttribute(PHX_READONLY, input.readOnly)\n        input.readOnly = true\n        if(input.files){\n          input.setAttribute(PHX_DISABLED, input.disabled)\n          input.disabled = true\n        }\n      })\n      formEl.setAttribute(this.binding(PHX_PAGE_LOADING), \"\")\n      return this.putRef([formEl].concat(disables).concat(buttons).concat(inputs), \"submit\")\n    }\n\n    let cid = this.targetComponentID(formEl, targetCtx)\n    if(LiveUploader.hasUploadsInProgress(formEl)){\n      let [ref, _els] = refGenerator()\n      return this.scheduleSubmit(formEl, ref, () => this.pushFormSubmit(formEl, targetCtx, phxEvent, onReply))\n    } else if(LiveUploader.inputsAwaitingPreflight(formEl).length > 0){\n      let [ref, els] = refGenerator()\n      let proxyRefGen = () => [ref, els]\n      this.uploadFiles(formEl, targetCtx, ref, cid, (_uploads) => {\n        let formData = serializeForm(formEl, {})\n        this.pushWithReply(proxyRefGen, \"event\", {\n          type: \"form\",\n          event: phxEvent,\n          value: formData,\n          cid: cid\n        }, onReply)\n      })\n    } else {\n      let formData = serializeForm(formEl)\n      console.log('form data', formData);\n      this.pushWithReply(refGenerator, \"event\", {\n        type: \"form\",\n        event: phxEvent,\n        value: formData,\n        cid: cid\n      }, onReply)\n    }\n  }\n\n  uploadFiles(formEl, targetCtx, ref, cid, onComplete){\n    let joinCountAtUpload = this.joinCount\n    let inputEls = LiveUploader.activeFileInputs(formEl)\n    let numFileInputsInProgress = inputEls.length\n\n    // get each file input\n    inputEls.forEach(inputEl => {\n      let uploader = new LiveUploader(inputEl, this, () => {\n        numFileInputsInProgress--\n        if(numFileInputsInProgress === 0){ onComplete() }\n      });\n\n      this.uploaders[inputEl] = uploader\n      let entries = uploader.entries().map(entry => entry.toPreflightPayload())\n\n      let payload = {\n        ref: inputEl.getAttribute(PHX_UPLOAD_REF),\n        entries: entries,\n        cid: this.targetComponentID(inputEl.form, targetCtx)\n      }\n\n      this.log(\"upload\", () => [\"sending preflight request\", payload])\n\n      this.pushWithReply(null, \"allow_upload\", payload, resp => {\n        this.log(\"upload\", () => [\"got preflight response\", resp])\n        if(resp.error){\n          this.undoRefs(ref)\n          let [entry_ref, reason] = resp.error\n          this.log(\"upload\", () => [`error for entry ${entry_ref}`, reason])\n        } else {\n          let onError = (callback) => {\n            this.channel.onError(() => {\n              if(this.joinCount === joinCountAtUpload){ callback() }\n            })\n          }\n          uploader.initAdapterUpload(resp, onError, this.liveSocket)\n        }\n      })\n    })\n  }\n\n  dispatchUploads(name, filesOrBlobs){\n    let inputs = DOM.findUploadInputs(this.el).filter(el => el.name === name)\n    if(inputs.length === 0){ logError(`no live file inputs found matching the name \"${name}\"`) }\n    else if(inputs.length > 1){ logError(`duplicate live file inputs found matching the name \"${name}\"`) }\n    else { DOM.dispatchEvent(inputs[0], PHX_TRACK_UPLOADS, {files: filesOrBlobs}) }\n  }\n\n  pushFormRecovery(form, newCid, callback){\n    this.liveSocket.withinOwners(form, (view, targetCtx) => {\n      let input = form.elements[0]\n      let phxEvent = form.getAttribute(this.binding(PHX_AUTO_RECOVER)) || form.getAttribute(this.binding(\"change\"))\n      view.pushInput(input, targetCtx, newCid, phxEvent, input, callback)\n    })\n  }\n\n  pushLinkPatch(href, targetEl, callback){\n    let linkRef = this.liveSocket.setPendingLink(href)\n    let refGen = targetEl ? () => this.putRef([targetEl], \"click\") : null\n\n    this.pushWithReply(refGen, \"live_patch\", {url: href}, resp => {\n      if(resp.link_redirect){\n        this.liveSocket.replaceMain(href, null, callback, linkRef)\n      } else {\n        if(this.liveSocket.commitPendingLink(linkRef)){\n          this.href = href\n        }\n        this.applyPendingUpdates()\n        callback && callback(linkRef)\n      }\n    }).receive(\"timeout\", () => this.liveSocket.redirect(window.location.href))\n  }\n\n  formsForRecovery(html){\n    if(this.joinCount === 0){ return [] }\n\n    let phxChange = this.binding(\"change\")\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n\n    return (\n      DOM.all(this.el, `form[${phxChange}]`)\n        .filter(form => form.id && this.ownsElement(form))\n        .filter(form => form.elements.length > 0)\n        .filter(form => form.getAttribute(this.binding(PHX_AUTO_RECOVER)) !== \"ignore\")\n        .map(form => {\n          let newForm = template.content.querySelector(`form[id=\"${form.id}\"][${phxChange}=\"${form.getAttribute(phxChange)}\"]`)\n          if(newForm){\n            return [form, newForm, this.componentID(newForm)]\n          } else {\n            return [form, null, null]\n          }\n        })\n        .filter(([form, newForm, newCid]) => newForm)\n    )\n  }\n\n  maybePushComponentsDestroyed(destroyedCIDs){\n    let willDestroyCIDs = destroyedCIDs.filter(cid => {\n      return DOM.findComponentNodeList(this.el, cid).length === 0\n    })\n    if(willDestroyCIDs.length > 0){\n      this.pruningCIDs.push(...willDestroyCIDs)\n\n      this.pushWithReply(null, \"cids_will_destroy\", {cids: willDestroyCIDs}, () => {\n        // The cids are either back on the page or they will be fully removed,\n        // so we can remove them from the pruningCIDs.\n        this.pruningCIDs = this.pruningCIDs.filter(cid => willDestroyCIDs.indexOf(cid) !== -1)\n\n        // See if any of the cids we wanted to destroy were added back,\n        // if they were added back, we don't actually destroy them.\n        let completelyDestroyCIDs = willDestroyCIDs.filter(cid => {\n          return DOM.findComponentNodeList(this.el, cid).length === 0\n        })\n\n        if(completelyDestroyCIDs.length > 0){\n          this.pushWithReply(null, \"cids_destroyed\", {cids: completelyDestroyCIDs}, (resp) => {\n            this.rendered.pruneCIDs(resp.cids)\n          })\n        }\n      })\n    }\n  }\n\n  ownsElement(el){\n    return el.getAttribute(PHX_PARENT_ID) === this.id ||\n      maybe(el.closest(PHX_VIEW_SELECTOR), node => node.id) === this.id\n  }\n\n  submitForm(form, targetCtx, phxEvent){\n    DOM.putPrivate(form, PHX_HAS_SUBMITTED, true)\n    this.liveSocket.blurActiveElement(this)\n    this.pushFormSubmit(form, targetCtx, phxEvent, () => {\n      this.liveSocket.restorePreviouslyActiveFocus()\n    })\n  }\n\n  binding(kind){ return this.liveSocket.binding(kind) }\n}\n", "import DOM from \"./dom\"\n\nlet JS = {\n  exec(eventType, phxEvent, view, el, defaults){\n    let [defaultKind, defaultArgs] = defaults || [null, {}]\n    let commands = phxEvent.charAt(0) === \"[\" ?\n      JSON.parse(phxEvent) : [[defaultKind, defaultArgs]]\n\n    commands.forEach(([kind, args]) => {\n      if(kind === defaultKind && defaultArgs.data){\n        args.data = Object.assign(args.data || {}, defaultArgs.data)\n      }\n      this[`exec_${kind}`](eventType, phxEvent, view, el, args)\n    })\n  },\n\n  // private\n\n  // commands\n\n  exec_dispatch(eventType, phxEvent, view, sourceEl, {to, event, detail}){\n    if(to){\n      DOM.all(document, to, el => DOM.dispatchEvent(el, event, detail))\n    } else {\n      DOM.dispatchEvent(sourceEl, event, detail)\n    }\n  },\n\n  exec_push(eventType, phxEvent, view, sourceEl, args){\n    let {event, data, target, page_loading, loading, value} = args\n    let pushOpts = {page_loading: !!page_loading, loading: loading, value: value}\n    let targetSrc = eventType === \"change\" ? sourceEl.form : sourceEl\n    let phxTarget = target || targetSrc.getAttribute(view.binding(\"target\")) || targetSrc\n    view.withinTargets(phxTarget, (targetView, targetCtx) => {\n      if(eventType === \"change\"){\n        let {newCid, _target, callback} = args\n        if(_target){ pushOpts._target = _target }\n        targetView.pushInput(sourceEl, targetCtx, newCid, event || phxEvent, pushOpts, callback)\n      } else if(eventType === \"submit\"){\n        targetView.submitForm(sourceEl, targetCtx, event || phxEvent, pushOpts)\n      } else {\n        targetView.pushEvent(eventType, sourceEl, targetCtx, event || phxEvent, data, pushOpts)\n      }\n    })\n  },\n\n  exec_add_class(eventType, phxEvent, view, sourceEl, {to, names, transition, time}){\n    if(to){\n      DOM.all(document, to, el => this.addOrRemoveClasses(el, names, [], transition, time, view))\n    } else {\n      this.addOrRemoveClasses(sourceEl, names, [], transition, view)\n    }\n  },\n\n  exec_remove_class(eventType, phxEvent, view, sourceEl, {to, names, transition, time}){\n    if(to){\n      DOM.all(document, to, el => this.addOrRemoveClasses(el, [], names, transition, time, view))\n    } else {\n      this.addOrRemoveClasses(sourceEl, [], names, transition, time, view)\n    }\n  },\n\n  exec_transition(eventType, phxEvent, view, sourceEl, {time, to, names}){\n    let els = to ? DOM.all(document, to) : [sourceEl]\n    els.forEach(el => {\n      this.addOrRemoveClasses(el, names, [])\n      view.transition(time, () => this.addOrRemoveClasses(el, [], names))\n    })\n  },\n\n  exec_toggle(eventType, phxEvent, view, sourceEl, {to, display, ins, outs, time}){\n    if(to){\n      DOM.all(document, to, el => this.toggle(eventType, view, el, display, ins || [], outs || [], time))\n    } else {\n      this.toggle(eventType, view, sourceEl, display, ins || [], outs || [], time)\n    }\n  },\n\n  exec_show(eventType, phxEvent, view, sourceEl, {to, display, transition, time}){\n    if(to){\n      DOM.all(document, to, el => this.show(eventType, view, el, display, transition, time))\n    } else {\n      this.show(eventType, view, sourceEl, transition, time)\n    }\n  },\n\n  exec_hide(eventType, phxEvent, view, sourceEl, {to, display, transition, time}){\n    if(to){\n      DOM.all(document, to, el => this.hide(eventType, view, el, display, transition, time))\n    } else {\n      this.hide(eventType, view, sourceEl, display, transition, time)\n    }\n  },\n\n  // utils for commands\n\n  show(eventType, view, el, display, transition, time){\n    let isVisible = this.isVisible(el)\n    if(transition.length > 0 && !isVisible){\n      this.toggle(eventType, view, el, display, transition, [], time)\n    } else if(!isVisible){\n      this.toggle(eventType, view, el, display, [], [], null)\n    }\n  },\n\n  hide(eventType, view, el, display, transition, time){\n    let isVisible = this.isVisible(el)\n    if(transition.length > 0 && isVisible){\n      this.toggle(eventType, view, el, display, [], transition, time)\n    } else if(isVisible){\n      this.toggle(eventType, view, el, display, [], [], time)\n    }\n  },\n\n  toggle(eventType, view, el, display, in_classes, out_classes, time){\n    if(in_classes.length > 0 || out_classes.length > 0){\n      if(this.isVisible(el)){\n        this.addOrRemoveClasses(el, out_classes, in_classes)\n        view.transition(time, () => {\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = \"none\")\n          this.addOrRemoveClasses(el, [], out_classes)\n        })\n      } else {\n        if(eventType === \"remove\"){ return }\n        this.addOrRemoveClasses(el, in_classes, out_classes)\n        DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = (display || \"block\"))\n        view.transition(time, () => {\n          this.addOrRemoveClasses(el, [], in_classes)\n        })\n      }\n    } else {\n      let newDisplay = this.isVisible(el) ? \"none\" : (display || \"block\")\n      DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = newDisplay)\n    }\n  },\n\n  addOrRemoveClasses(el, adds, removes, transition, time, view){\n    if(transition && transition.length > 0){\n      this.addOrRemoveClasses(el, transition, [])\n      return view.transition(time, () => this.addOrRemoveClasses(el, adds, removes.concat(transition)))\n    }\n    window.requestAnimationFrame(() => {\n      let [prevAdds, prevRemoves] = DOM.getSticky(el, \"classes\", [[], []])\n      let keepAdds = adds.filter(name => prevAdds.indexOf(name) < 0 && !el.classList.contains(name))\n      let keepRemoves = removes.filter(name => prevRemoves.indexOf(name) < 0 && el.classList.contains(name))\n      let newAdds = prevAdds.filter(name => removes.indexOf(name) < 0).concat(keepAdds)\n      let newRemoves = prevRemoves.filter(name => adds.indexOf(name) < 0).concat(keepRemoves)\n\n      DOM.putSticky(el, \"classes\", currentEl => {\n        currentEl.classList.remove(...newRemoves)\n        currentEl.classList.add(...newAdds)\n        return [newAdds, newRemoves]\n      })\n    })\n  },\n\n  hasAllClasses(el, classes){ return classes.every(name => el.classList.contains(name)) },\n\n  isVisible(el){\n    let style = window.getComputedStyle(el)\n    return !(style.opacity === 0 || style.display === \"none\")\n  },\n\n  isToggledOut(el, out_classes){\n    return !this.isVisible(el) || this.hasAllClasses(el, out_classes)\n  }\n}\n\nexport default JS\n", "/** Initializes the LiveSocket\n *\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"wss://example.com/live\"`,\n *                                               `\"/live\"` (inherited host & protocol)\n * @param {Phoenix.Socket} socket - the required Phoenix Socket class imported from \"phoenix\". For example:\n *\n *     import {Socket} from \"phoenix\"\n *     import {LiveSocket} from \"live_element\"\n *     let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n *\n * @param {Object} [opts] - Optional configuration. Outside of keys listed below, all\n * configuration is passed directly to the Phoenix Socket constructor.\n * @param {Object} [opts.defaults] - The optional defaults to use for various bindings,\n * such as `phx-debounce`. Supports the following keys:\n *\n *   - debounce - the millisecond phx-debounce time. Defaults 300\n *   - throttle - the millisecond phx-throttle time. Defaults 300\n *\n * @param {Function} [opts.params] - The optional function for passing connect params.\n * The function receives the element associated with a given LiveView. For example:\n *\n *     (el) => {view: el.getAttribute(\"data-my-view-name\", token: window.myToken}\n *\n * @param {string} [opts.bindingPrefix] - The optional prefix to use for all phx DOM annotations.\n * Defaults to \"phx-\".\n * @param {Object} [opts.hooks] - The optional object for referencing LiveView hook callbacks.\n * @param {Object} [opts.uploaders] - The optional object for referencing LiveView uploader callbacks.\n * @param {integer} [opts.loaderTimeout] - The optional delay in milliseconds to wait before apply\n * loading states.\n * @param {Function} [opts.viewLogger] - The optional function to log debug information. For example:\n *\n *     (view, kind, msg, obj) => console.log(`${view.id} ${kind}: ${msg} - `, obj)\n *\n * @param {Object} [opts.metadata] - The optional object mapping event names to functions for\n * populating event metadata. For example:\n *\n *     metadata: {\n *       click: (e, el) => {\n *         return {\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           detail: e.detail || 1,\n *         }\n *       },\n *       keydown: (e, el) => {\n *         return {\n *           key: e.key,\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           shiftKey: e.shiftKey\n *         }\n *       }\n *     }\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Useful when LiveView won't have access to `sessionStorage`.  For example, This could\n * happen if a site loads a cross-domain LiveView in an iframe.  Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n * @param {Object} [opts.localStorage] - An optional Storage compatible object\n * Useful for when LiveView won't have access to `localStorage`.\n * See `opts.sessionStorage` for examples.\n*/\n\nimport {\n  BINDING_PREFIX,\n  CONSECUTIVE_RELOADS,\n  DEFAULTS,\n  FAILSAFE_JITTER,\n  LOADER_TIMEOUT,\n  MAX_RELOADS,\n  PHX_DEBOUNCE,\n  PHX_DROP_TARGET,\n  PHX_HAS_FOCUSED,\n  PHX_KEY,\n  PHX_LINK_STATE,\n  PHX_LIVE_LINK,\n  PHX_LV_DEBUG,\n  PHX_LV_LATENCY_SIM,\n  PHX_LV_PROFILE,\n  PHX_MAIN,\n  PHX_PARENT_ID,\n  PHX_VIEW_SELECTOR,\n  PHX_ROOT_ID,\n  PHX_THROTTLE,\n  PHX_TRACK_UPLOADS,\n  PHX_SESSION,\n  RELOAD_JITTER,\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  closure,\n  debug,\n  isObject,\n  maybe\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport Hooks from \"./hooks\"\nimport LiveUploader from \"./live_uploader\"\nimport View from \"./view\"\nimport JS from \"./js\"\n\nexport default class LiveSocket {\n  constructor(url, phxSocket, opts = {}){\n    this.unloaded = false\n    if(!phxSocket || phxSocket.constructor.name === \"Object\"){\n      throw new Error(`\n      a phoenix Socket must be provided as the second argument to the LiveSocket constructor. For example:\n\n          import {Socket} from \"phoenix\"\n          import LiveSocket from \"live_element\"\n          let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n      `)\n    }\n    this.socket = new phxSocket(url, opts)\n    this.bindingPrefix = opts.bindingPrefix || BINDING_PREFIX\n    this.opts = opts\n    this.params = closure(opts.params || {})\n    this.viewLogger = opts.viewLogger\n    this.metadataCallbacks = opts.metadata || {}\n    this.defaults = Object.assign(clone(DEFAULTS), opts.defaults || {})\n    this.activeElement = null\n    this.prevActive = null\n    this.silenced = false\n    this.main = null\n    this.linkRef = 1\n    this.roots = {}\n    this.href = window.location.href\n    this.pendingLink = null\n    this.currentLocation = clone(window.location)\n    this.hooks = opts.hooks || {}\n    this.uploaders = opts.uploaders || {}\n    this.loaderTimeout = opts.loaderTimeout || LOADER_TIMEOUT\n    this.localStorage = opts.localStorage || window.localStorage\n    this.sessionStorage = opts.sessionStorage || window.sessionStorage\n    this.boundTopLevelEvents = false\n    this.domCallbacks = Object.assign({onNodeAdded: closure(), onBeforeElUpdated: closure()}, opts.dom || {})\n    this.transitions = new TransitionSet()\n    window.addEventListener(\"pagehide\", _e => {\n      this.unloaded = true\n    })\n    this.socket.onOpen(() => {\n      if(this.isUnloaded()){\n        // reload page if being restored from back/forward cache and browser does not emit \"pageshow\"\n        window.location.reload()\n      }\n    })\n  }\n\n  // public\n\n  isProfileEnabled(){ return this.sessionStorage.getItem(PHX_LV_PROFILE) === \"true\" }\n\n  isDebugEnabled(){ return this.sessionStorage.getItem(PHX_LV_DEBUG) === \"true\" }\n\n  enableDebug(){ this.sessionStorage.setItem(PHX_LV_DEBUG, \"true\") }\n\n  enableProfiling(){ this.sessionStorage.setItem(PHX_LV_PROFILE, \"true\") }\n\n  disableDebug(){ this.sessionStorage.removeItem(PHX_LV_DEBUG) }\n\n  disableProfiling(){ this.sessionStorage.removeItem(PHX_LV_PROFILE) }\n\n  enableLatencySim(upperBoundMs){\n    this.enableDebug()\n    console.log(\"latency simulator enabled for the duration of this browser session. Call disableLatencySim() to disable\")\n    this.sessionStorage.setItem(PHX_LV_LATENCY_SIM, upperBoundMs)\n  }\n\n  disableLatencySim(){ this.sessionStorage.removeItem(PHX_LV_LATENCY_SIM) }\n\n  getLatencySim(){\n    let str = this.sessionStorage.getItem(PHX_LV_LATENCY_SIM)\n    return str ? parseInt(str) : null\n  }\n\n  getSocket(){ return this.socket }\n\n  connect(){\n    let doConnect = () => {\n      if(this.joinRootViews()){\n        this.bindTopLevelEvents()\n        this.socket.connect()\n      }\n    }\n    if([\"complete\", \"loaded\", \"interactive\"].indexOf(document.readyState) >= 0){\n      doConnect()\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => doConnect())\n    }\n  }\n\n  disconnect(callback){ this.socket.disconnect(callback) }\n\n  execJS(el, encodedJS, eventType = null){\n    this.owner(el, view => JS.exec(eventType, encodedJS, view, el))\n  }\n\n  // private\n\n  triggerDOM(kind, args){ this.domCallbacks[kind](...args) }\n\n  time(name, func){\n    if(!this.isProfileEnabled() || !console.time){ return func() }\n    console.time(name)\n    let result = func()\n    console.timeEnd(name)\n    return result\n  }\n\n  log(view, kind, msgCallback){\n    if(this.viewLogger){\n      let [msg, obj] = msgCallback()\n      this.viewLogger(view, kind, msg, obj)\n    } else if(this.isDebugEnabled()){\n      let [msg, obj] = msgCallback()\n      debug(view, kind, msg, obj)\n    }\n  }\n\n  requestDOMUpdate(callback){\n    this.transitions.after(callback)\n  }\n\n  transition(time, onDone = function(){}){\n    this.transitions.addTransition(time, onDone)\n  }\n\n  onChannel(channel, event, cb){\n    channel.on(event, data => {\n      let latency = this.getLatencySim()\n      if(!latency){\n        cb(data)\n      } else {\n        console.log(`simulating ${latency}ms of latency from server to client`)\n        setTimeout(() => cb(data), latency)\n      }\n    })\n  }\n\n  wrapPush(view, opts, push){\n    let latency = this.getLatencySim()\n    let oldJoinCount = view.joinCount\n    if(!latency){\n      if(opts.timeout){\n        return push().receive(\"timeout\", () => {\n          if(view.joinCount === oldJoinCount && !view.isDestroyed()){\n            this.reloadWithJitter(view, () => {\n              this.log(view, \"timeout\", () => [\"received timeout while communicating with server. Falling back to hard refresh for recovery\"])\n            })\n          }\n        })\n      } else {\n        return push()\n      }\n    }\n\n    console.log(`simulating ${latency}ms of latency from client to server`)\n    let fakePush = {\n      receives: [],\n      receive(kind, cb){ this.receives.push([kind, cb]) }\n    }\n    setTimeout(() => {\n      if(view.isDestroyed()){ return }\n      fakePush.receives.reduce((acc, [kind, cb]) => acc.receive(kind, cb), push())\n    }, latency)\n    return fakePush\n  }\n\n  reloadWithJitter(view, log){\n    view.destroy()\n    this.disconnect()\n    let [minMs, maxMs] = RELOAD_JITTER\n    let afterMs = Math.floor(Math.random() * (maxMs - minMs + 1)) + minMs\n    let tries = Browser.updateLocal(this.localStorage, window.location.pathname, CONSECUTIVE_RELOADS, 0, count => count + 1)\n    log ? log() : this.log(view, \"join\", () => [`encountered ${tries} consecutive reloads`])\n    if(tries > MAX_RELOADS){\n      this.log(view, \"join\", () => [`exceeded ${MAX_RELOADS} consecutive reloads. Entering failsafe mode`])\n      afterMs = FAILSAFE_JITTER\n    }\n    setTimeout(() => {\n      if(this.hasPendingLink()){\n        window.location = this.pendingLink\n      } else {\n        window.location.reload()\n      }\n    }, afterMs)\n  }\n\n  getHookCallbacks(name){\n    return name && name.startsWith(\"Phoenix.\") ? Hooks[name.split(\".\")[1]] : this.hooks[name]\n  }\n\n  isUnloaded(){ return this.unloaded }\n\n  isConnected(){ return this.socket.isConnected() }\n\n  getBindingPrefix(){ return this.bindingPrefix }\n\n  binding(kind){ return `${this.getBindingPrefix()}${kind}` }\n\n  channel(topic, params){ return this.socket.channel(topic, params) }\n\n  joinRootViews(){\n    let rootsFound = false\n    DOM.all(document, `${PHX_VIEW_SELECTOR}:not([${PHX_PARENT_ID}])`, rootEl => {\n      if(!this.getRootById(rootEl.id)){\n        let view = this.newRootView(rootEl)\n        view.setHref(this.getHref())\n        view.join()\n        if(rootEl.getAttribute(PHX_MAIN)){ this.main = view }\n      }\n      rootsFound = true\n    })\n    return rootsFound\n  }\n\n  redirect(to, flash){\n    this.disconnect()\n    Browser.redirect(to, flash)\n  }\n\n  replaceMain(href, flash, callback = null, linkRef = this.setPendingLink(href)){\n    let oldMainEl = this.main.el\n    let newMainEl = DOM.cloneNode(oldMainEl, \"\")\n    this.main.showLoader(this.loaderTimeout)\n    this.main.destroy()\n\n    this.main = this.newRootView(newMainEl, flash)\n    this.main.setRedirect(href)\n    this.transitionRemoves()\n    this.main.join((joinCount, onDone) => {\n      if(joinCount === 1 && this.commitPendingLink(linkRef)){\n        this.requestDOMUpdate(() => {\n          oldMainEl.replaceWith(newMainEl)\n          callback && callback()\n          onDone()\n        })\n      }\n    })\n  }\n\n  transitionRemoves(elements){\n    let removeAttr = this.binding(\"remove\")\n    elements = elements || DOM.all(document, `[${removeAttr}]`)\n    elements.forEach(el => {\n      if(document.body.contains(el)){ // skip children already removed\n        this.execJS(el, el.getAttribute(removeAttr), \"remove\")\n      }\n    })\n  }\n\n  isPhxView(el){ return el.getAttribute && el.getAttribute(PHX_SESSION) !== null }\n\n  newRootView(el, flash){\n    let view = new View(el, this, null, flash)\n    this.roots[view.id] = view\n    return view\n  }\n\n  owner(childEl, callback){\n    let view = maybe(childEl.closest(PHX_VIEW_SELECTOR), el => this.getViewByEl(el))\n    if(view){ callback(view) }\n  }\n\n  withinOwners(childEl, callback){\n    this.owner(childEl, view => callback(view, childEl))\n  }\n\n  getViewByEl(el){\n    let rootId = el.getAttribute(PHX_ROOT_ID)\n    return maybe(this.getRootById(rootId), root => root.getDescendentByEl(el))\n  }\n\n  getRootById(id){ return this.roots[id] }\n\n  destroyAllViews(){\n    for(let id in this.roots){\n      this.roots[id].destroy()\n      delete this.roots[id]\n    }\n  }\n\n  destroyViewByEl(el){\n    let root = this.getRootById(el.getAttribute(PHX_ROOT_ID))\n    if(root){ root.destroyDescendent(el.id) }\n  }\n\n  setActiveElement(target){\n    if(this.activeElement === target){ return }\n    this.activeElement = target\n    let cancel = () => {\n      if(target === this.activeElement){ this.activeElement = null }\n      target.removeEventListener(\"mouseup\", this)\n      target.removeEventListener(\"touchend\", this)\n    }\n    target.addEventListener(\"mouseup\", cancel)\n    target.addEventListener(\"touchend\", cancel)\n  }\n\n  getActiveElement(){\n    if(document.activeElement === document.body){\n      return this.activeElement || document.activeElement\n    } else {\n      // document.activeElement can be null in Internet Explorer 11\n      return document.activeElement || document.body\n    }\n  }\n\n  dropActiveElement(view){\n    if(this.prevActive && view.ownsElement(this.prevActive)){\n      this.prevActive = null\n    }\n  }\n\n  restorePreviouslyActiveFocus(){\n    if(this.prevActive && this.prevActive !== document.body){\n      this.prevActive.focus()\n    }\n  }\n\n  blurActiveElement(){\n    this.prevActive = this.getActiveElement()\n    if(this.prevActive !== document.body){ this.prevActive.blur() }\n  }\n\n  bindTopLevelEvents(){\n    if(this.boundTopLevelEvents){ return }\n\n    this.boundTopLevelEvents = true\n    document.body.addEventListener(\"click\", function (){ }) // ensure all click events bubble for mobile Safari\n    window.addEventListener(\"pageshow\", e => {\n      if(e.persisted){ // reload page if being restored from back/forward cache\n        this.getSocket().disconnect()\n        this.withPageLoading({to: window.location.href, kind: \"redirect\"})\n        window.location.reload()\n      }\n    }, true)\n    this.bindNav()\n    this.bindClicks()\n    this.bindForms()\n    this.bind({keyup: \"keyup\", keydown: \"keydown\"}, (e, type, view, targetEl, phxEvent, eventTarget) => {\n      let matchKey = targetEl.getAttribute(this.binding(PHX_KEY))\n      let pressedKey = e.key && e.key.toLowerCase() // chrome clicked autocompletes send a keydown without key\n      if(matchKey && matchKey.toLowerCase() !== pressedKey){ return }\n\n      let data = {key: e.key, ...this.eventMeta(type, e, targetEl)}\n      JS.exec(type, phxEvent, view, targetEl, [\"push\", {data}])\n    })\n    this.bind({blur: \"focusout\", focus: \"focusin\"}, (e, type, view, targetEl, phxEvent, eventTarget) => {\n      if(!eventTarget){\n        let data = {key: e.key, ...this.eventMeta(type, e, targetEl)}\n        JS.exec(type, phxEvent, view, targetEl, [\"push\", {data}])\n      }\n    })\n    this.bind({blur: \"blur\", focus: \"focus\"}, (e, type, view, targetEl, targetCtx, phxEvent, phxTarget) => {\n      // blur and focus are triggered on document and window. Discard one to avoid dups\n      if(phxTarget === \"window\"){\n        let data = this.eventMeta(type, e, targetEl)\n        JS.exec(type, phxEvent, view, targetEl, [\"push\", {data}])\n      }\n    })\n    window.addEventListener(\"dragover\", e => e.preventDefault())\n    window.addEventListener(\"drop\", e => {\n      e.preventDefault()\n      let dropTargetId = maybe(closestPhxBinding(e.target, this.binding(PHX_DROP_TARGET)), trueTarget => {\n        return trueTarget.getAttribute(this.binding(PHX_DROP_TARGET))\n      })\n      let dropTarget = dropTargetId && document.getElementById(dropTargetId)\n      let files = Array.from(e.dataTransfer.files || [])\n      if(!dropTarget || dropTarget.disabled || files.length === 0 || !(dropTarget.files instanceof FileList)){ return }\n\n      LiveUploader.trackFiles(dropTarget, files)\n      dropTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n    this.on(PHX_TRACK_UPLOADS, e => {\n      let uploadTarget = e.target\n      if(!DOM.isUploadInput(uploadTarget)){ return }\n      let files = Array.from(e.detail.files || []).filter(f => f instanceof File || f instanceof Blob)\n      LiveUploader.trackFiles(uploadTarget, files)\n      uploadTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n  }\n\n  eventMeta(eventName, e, targetEl){\n    let callback = this.metadataCallbacks[eventName]\n    return callback ? callback(e, targetEl) : {}\n  }\n\n  setPendingLink(href){\n    this.linkRef++\n    this.pendingLink = href\n    return this.linkRef\n  }\n\n  commitPendingLink(linkRef){\n    if(this.linkRef !== linkRef){\n      return false\n    } else {\n      this.href = this.pendingLink\n      this.pendingLink = null\n      return true\n    }\n  }\n\n  getHref(){ return this.href }\n\n  hasPendingLink(){ return !!this.pendingLink }\n\n  bind(events, callback){\n    for(let event in events){\n      let browserEventName = events[event]\n\n      this.on(browserEventName, e => {\n        let binding = this.binding(event)\n        let windowBinding = this.binding(`window-${event}`)\n        let targetPhxEvent = e.target.getAttribute && e.target.getAttribute(binding)\n        if(targetPhxEvent){\n          this.debounce(e.target, e, () => {\n            this.withinOwners(e.target, view => {\n              callback(e, event, view, e.target, targetPhxEvent, null)\n            })\n          })\n        } else {\n          DOM.all(document, `[${windowBinding}]`, el => {\n            let phxEvent = el.getAttribute(windowBinding)\n            this.debounce(el, e, () => {\n              this.withinOwners(el, view => {\n                callback(e, event, view, el, phxEvent, \"window\")\n              })\n            })\n          })\n        }\n      })\n    }\n  }\n\n  bindClicks(){\n    this.bindClick(\"click\", \"click\", false)\n    this.bindClick(\"mousedown\", \"capture-click\", true)\n  }\n\n  bindClick(eventName, bindingName, capture){\n    let click = this.binding(bindingName)\n    window.addEventListener(eventName, e => {\n      if(!this.isConnected()){ return }\n      let target = null\n      if(capture){\n        target = e.target.matches(`[${click}]`) ? e.target : e.target.querySelector(`[${click}]`)\n      } else {\n        target = closestPhxBinding(e.target, click)\n        this.dispatchClickAway(e)\n      }\n      let phxEvent = target && target.getAttribute(click)\n      if(!phxEvent){ return }\n      if(target.getAttribute(\"href\") === \"#\"){ e.preventDefault() }\n\n      this.debounce(target, e, () => {\n        this.withinOwners(target, view => {\n          JS.exec(\"click\", phxEvent, view, target, [\"push\", {data: this.eventMeta(\"click\", e, target)}])\n        })\n      })\n    }, capture)\n  }\n\n  dispatchClickAway(e){\n    let binding = this.binding(\"click-away\")\n    DOM.all(document, `[${binding}]`, el => {\n      if(!(el.isSameNode(e.target) || el.contains(e.target))){\n        this.withinOwners(e.target, view => {\n          let phxEvent = el.getAttribute(binding)\n          JS.exec(\"click\", phxEvent, view, e.target, [\"push\", {data: this.eventMeta(\"click\", e, e.target)}])\n        })\n      }\n    })\n  }\n\n  bindNav(){\n    if(!Browser.canPushState()){ return }\n    if(history.scrollRestoration){ history.scrollRestoration = \"manual\" }\n    let scrollTimer = null\n    window.addEventListener(\"scroll\", _e => {\n      clearTimeout(scrollTimer)\n      scrollTimer = setTimeout(() => {\n        Browser.updateCurrentState(state => Object.assign(state, {scroll: window.scrollY}))\n      }, 100)\n    })\n    window.addEventListener(\"popstate\", event => {\n      if(!this.registerNewLocation(window.location)){ return }\n      let {type, id, root, scroll} = event.state || {}\n      let href = window.location.href\n\n      this.requestDOMUpdate(() => {\n        if(this.main.isConnected() && (type === \"patch\" && id === this.main.id)){\n          this.main.pushLinkPatch(href, null)\n        } else {\n          this.replaceMain(href, null, () => {\n            if(root){ this.replaceRootHistory() }\n            if(typeof(scroll) === \"number\"){\n              setTimeout(() => {\n                window.scrollTo(0, scroll)\n              }, 0) // the body needs to render before we scroll.\n            }\n          })\n        }\n      })\n    }, false)\n    window.addEventListener(\"click\", e => {\n      let target = closestPhxBinding(e.target, PHX_LIVE_LINK)\n      let type = target && target.getAttribute(PHX_LIVE_LINK)\n      let wantsNewTab = e.metaKey || e.ctrlKey || e.button === 1\n      if(!type || !this.isConnected() || !this.main || wantsNewTab){ return }\n      let href = target.href\n      let linkState = target.getAttribute(PHX_LINK_STATE)\n      e.preventDefault()\n      if(this.pendingLink === href){ return }\n\n      this.requestDOMUpdate(() => {\n        if(type === \"patch\"){\n          this.pushHistoryPatch(href, linkState, target)\n        } else if(type === \"redirect\"){\n          this.historyRedirect(href, linkState)\n        } else {\n          throw new Error(`expected ${PHX_LIVE_LINK} to be \"patch\" or \"redirect\", got: ${type}`)\n        }\n      })\n    }, false)\n  }\n\n  dispatchEvent(event, payload = {}){\n    DOM.dispatchEvent(window, `phx:${event}`, payload)\n  }\n\n  dispatchEvents(events){\n    events.forEach(([event, payload]) => this.dispatchEvent(event, payload))\n  }\n\n  withPageLoading(info, callback){\n    DOM.dispatchEvent(window, \"phx:page-loading-start\", info)\n    let done = () => DOM.dispatchEvent(window, \"phx:page-loading-stop\", info)\n    return callback ? callback(done) : done\n  }\n\n  pushHistoryPatch(href, linkState, targetEl){\n    this.withPageLoading({to: href, kind: \"patch\"}, done => {\n      this.main.pushLinkPatch(href, targetEl, linkRef => {\n        this.historyPatch(href, linkState, linkRef)\n        done()\n      })\n    })\n  }\n\n  historyPatch(href, linkState, linkRef = this.setPendingLink(href)){\n    if(!this.commitPendingLink(linkRef)){ return }\n\n    Browser.pushState(linkState, {type: \"patch\", id: this.main.id}, href)\n    this.registerNewLocation(window.location)\n  }\n\n  historyRedirect(href, linkState, flash){\n    let scroll = window.scrollY\n    this.withPageLoading({to: href, kind: \"redirect\"}, done => {\n      this.replaceMain(href, flash, () => {\n        Browser.pushState(linkState, {type: \"redirect\", id: this.main.id, scroll: scroll}, href)\n        this.registerNewLocation(window.location)\n        done()\n      })\n    })\n  }\n\n  replaceRootHistory(){\n    Browser.pushState(\"replace\", {root: true, type: \"patch\", id: this.main.id})\n  }\n\n  registerNewLocation(newLocation){\n    let {pathname, search} = this.currentLocation\n    if(pathname + search === newLocation.pathname + newLocation.search){\n      return false\n    } else {\n      this.currentLocation = clone(newLocation)\n      return true\n    }\n  }\n\n  bindForms(){\n    let iterations = 0\n    this.on(\"submit\", e => {\n      let phxEvent = e.target.getAttribute(this.binding(\"submit\"))\n      if(!phxEvent){ return }\n      e.preventDefault()\n      e.target.disabled = true\n      this.withinOwners(e.target, view => {\n        JS.exec(\"submit\", phxEvent, view, e.target, [\"push\", {}])\n      })\n    }, false)\n\n    for(let type of [\"change\", \"input\"]){\n      this.on(type, e => {\n        let input = e.target\n        let phxEvent = input.form && input.form.getAttribute(this.binding(\"change\"))\n        if(!phxEvent){ return }\n        if(input.type === \"number\" && input.validity && input.validity.badInput){ return }\n        let currentIterations = iterations\n        iterations++\n        let {at: at, type: lastType} = DOM.private(input, \"prev-iteration\") || {}\n        // detect dup because some browsers dispatch both \"input\" and \"change\"\n        if(at === currentIterations - 1 && type !== lastType){ return }\n\n        DOM.putPrivate(input, \"prev-iteration\", {at: currentIterations, type: type})\n\n        this.debounce(input, e, () => {\n          this.withinOwners(input.form, view => {\n            DOM.putPrivate(input, PHX_HAS_FOCUSED, true)\n            if(!DOM.isTextualInput(input)){\n              this.setActiveElement(input)\n            }\n            JS.exec(\"change\", phxEvent, view, input, [\"push\", {_target: e.target.name}])\n          })\n        })\n      }, false)\n    }\n  }\n\n  debounce(el, event, callback){\n    let phxDebounce = this.binding(PHX_DEBOUNCE)\n    let phxThrottle = this.binding(PHX_THROTTLE)\n    let defaultDebounce = this.defaults.debounce.toString()\n    let defaultThrottle = this.defaults.throttle.toString()\n    DOM.debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, callback)\n  }\n\n  silenceEvents(callback){\n    this.silenced = true\n    callback()\n    this.silenced = false\n  }\n\n  on(event, callback){\n    window.addEventListener(event, e => {\n      if(!this.silenced){ callback(e) }\n    })\n  }\n}\n\nclass TransitionSet {\n  constructor(){\n    this.transitions = new Set()\n    this.pendingOps = []\n    this.reset()\n  }\n\n  reset(){\n    this.transitions.forEach(timer => {\n      cancelTimeout(timer)\n      this.transitions.delete(timer)\n    })\n    this.flushPendingOps()\n  }\n\n  after(callback){\n    if(this.size() === 0){\n      callback()\n    } else {\n      this.pushPendingOp(callback)\n    }\n  }\n\n  addTransition(time, onDone){\n    let timer = setTimeout(() => {\n      this.transitions.delete(timer)\n      onDone()\n      if(this.size() === 0){ this.flushPendingOps() }\n    }, time)\n    this.transitions.add(timer)\n  }\n\n  pushPendingOp(op){ this.pendingOps.push(op) }\n\n  size(){ return this.transitions.size }\n\n  flushPendingOps(){\n    this.pendingOps.forEach(op => op())\n    this.pendingOps = []\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets =\n  window.ShadowRoot &&\n  (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst styleSheetCache = new Map<string, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n\n  private constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // Note, if `supportsAdoptingStyleSheets` is true then we assume\n    // CSSStyleSheet is constructable.\n    let styleSheet = styleSheetCache.get(this.cssText);\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      styleSheetCache.set(this.cssText, (styleSheet = new CSSStyleSheet()));\n      styleSheet.replaceSync(this.cssText);\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (cssText: string, safeToken: symbol): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * [[LitElement.styles | `styles`]] property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values [[`unsafeCSS`]] may\n * be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(cssText, constructionToken);\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (window as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle = supportsAdoptingStyleSheets\n  ? (s: CSSResultOrNative) => s\n  : (s: CSSResultOrNative) =>\n      s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * [[ReactiveElement]].\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nconst DEV_MODE = true;\n\nlet requestUpdateThenable: (name: string) => {\n  then: (\n    onfulfilled?: (value: boolean) => void,\n    _onrejected?: () => void\n  ) => void;\n};\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst polyfillSupport = DEV_MODE\n  ? window.reactiveElementPolyfillSupportDevMode\n  : window.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (window.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n\n  requestUpdateThenable = (name) => ({\n    then: (\n      onfulfilled?: (value: boolean) => void,\n      _onrejected?: () => void\n    ) => {\n      issueWarning(\n        'request-update-promise',\n        `The \\`requestUpdate\\` method should no longer return a Promise but ` +\n          `does so on \\`${name}\\`. Use \\`updateComplete\\` instead.`\n      );\n      if (onfulfilled !== undefined) {\n        onfulfilled(false);\n      }\n    },\n  });\n}\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * Map of changed properties with old values. Takes an optional generic\n * interface corresponding to the declared element properties.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = keyof T extends PropertyKey\n  ? Map<keyof T, unknown>\n  : never;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? '' : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind = 'change-in-update' | 'migration';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning.?('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning.?('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning.?('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning.?('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this._initializers ??= [];\n    this._initializers.push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static [finalized] = true;\n\n  /**\n   * Memoized list of all element properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap = new Map();\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the [[`css`]] tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * 'nonce-<base64-value>' with <base64-value> replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated <style> elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this.elementProperties.forEach((v, p) => {\n      const attr = this.__attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a `PropertyDeclaration` for the property with the given options.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // if this is a state property, force the attribute to false.\n    if (options.state) {\n      // Cast as any since this is readonly.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (options as any).attribute = false;\n    }\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure finalization has been kicked off.\n    this.finalize();\n    this.elementProperties.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (!options.noAccessor && !this.prototype.hasOwnProperty(name)) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        Object.defineProperty(this.prototype, name, descriptor);\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ) {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = (this as {} as {[key: string]: unknown})[\n          name as string\n        ];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as ReactiveElement).requestUpdate(\n          name,\n          oldValue,\n          options\n        );\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override [[`createProperty`]].\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  protected static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) || defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties, sets up element\n   * styling, and ensures any superclasses are also finalized. Returns true if\n   * the element was finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(finalized)) {\n      return false;\n    }\n    this[finalized] = true;\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n    this.elementProperties = new Map(superCtor.elementProperties);\n    // initialize Map populated in observedAttributes\n    this.__attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...Object.getOwnPropertySymbols(props),\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeScript lack of support for symbol in\n        // index types\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n    this.elementStyles = this.finalizeStyles(this.styles);\n    // DEV mode warnings\n    if (DEV_MODE) {\n      const warnRemovedOrRenamed = (name: string, renamed = false) => {\n        if (this.prototype.hasOwnProperty(name)) {\n          issueWarning(\n            renamed ? 'renamed-api' : 'removed-api',\n            `\\`${name}\\` is implemented on class ${this.name}. It ` +\n              `has been ${renamed ? 'renamed' : 'removed'} ` +\n              `in this version of LitElement.`\n          );\n        }\n      };\n      warnRemovedOrRenamed('initialize');\n      warnRemovedOrRenamed('requestUpdateInternal');\n      warnRemovedOrRenamed('_getUpdateComplete', true);\n    }\n    return true;\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | ShadowRoot;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  private __instanceProperties?: PropertyValues = new Map();\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: ReactiveController[];\n\n  constructor() {\n    super();\n    this._initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   *\n   * @internal\n   */\n  _initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= []).push(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n    // splice do nothing.\n    this.__controllers?.splice(this.__controllers.indexOf(controller) >>> 0, 1);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n      (_v, p) => {\n        if (this.hasOwnProperty(p)) {\n          this.__instanceProperties!.set(p, this[p as keyof this]);\n          delete this[p as keyof this];\n        }\n      }\n    );\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): Element | ShadowRoot {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // create renderRoot before first update.\n    if (this.renderRoot === undefined) {\n      (\n        this as {\n          renderRoot: Element | DocumentFragment;\n        }\n      ).renderRoot = this.createRenderRoot();\n    }\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(\n    name: PropertyKey,\n    value: unknown,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const toAttribute =\n        (options.converter as ComplexAttributeConverter)?.toAttribute ??\n        defaultConverter.toAttribute;\n      const attrValue = toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n          'migration'\n        ) >= 0 &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter = options.converter;\n      const fromAttribute =\n        (converter as ComplexAttributeConverter)?.fromAttribute ??\n        (typeof converter === 'function'\n          ? (converter as (value: string | null, type?: unknown) => unknown)\n          : null) ??\n        defaultConverter.fromAttribute;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this[propName as keyof this] = fromAttribute!(value, options.type) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options =\n        options ||\n        (this.constructor as typeof ReactiveElement).getPropertyOptions(name);\n      const hasChanged = options.hasChanged || notEqual;\n      if (hasChanged(this[name as keyof this], oldValue)) {\n        if (!this._$changedProperties.has(name)) {\n          this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n          if (this.__reflectingProperties === undefined) {\n            this.__reflectingProperties = new Map();\n          }\n          this.__reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this.isUpdatePending && shouldRequestUpdate) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n    // Note, since this no longer returns a promise, in dev mode we return a\n    // thenable which warns if it's called.\n    return DEV_MODE\n      ? (requestUpdateThenable(this.localName) as unknown as void)\n      : undefined;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    return this.performUpdate();\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * Note: To ensure `performUpdate()` synchronously completes a pending update,\n   * it should not be overridden. In LitElement 2.x it was suggested to override\n   * `performUpdate()` to also customizing update scheduling. Instead, you should now\n   * override `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\n   * scheduling updates via `performUpdate()` continues to work, but will make\n   * also calling `performUpdate()` to synchronously process updates difficult.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void | Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    // create renderRoot before first update.\n    if (!this.hasUpdated) {\n      // Produce warning if any class properties are shadowed by class fields\n      if (DEV_MODE) {\n        const shadowedProperties: string[] = [];\n        (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n          (_v, p) => {\n            if (this.hasOwnProperty(p) && !this.__instanceProperties?.has(p)) {\n              shadowedProperties.push(p as string);\n            }\n          }\n        );\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n    }\n    // Mixin instance properties once, if they exist.\n    if (this.__instanceProperties) {\n      // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.__instanceProperties!.forEach((v, p) => ((this as any)[p] = v));\n      this.__instanceProperties = undefined;\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * @category updates\n   */\n  willUpdate(_changedProperties: PropertyValues) {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n        'change-in-update'\n      ) >= 0\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this.__reflectingProperties !== undefined) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this.__reflectingProperties.forEach((v, k) =>\n        this.__propertyToAttribute(k, this[k as keyof this], v)\n      );\n      this.__reflectingProperties = undefined;\n    }\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = ['change-in-update'];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (this.enabledWarnings!.indexOf(warning) < 0) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(globalThis.reactiveElementVersions ??= []).push('1.0.1');\nif (DEV_MODE && globalThis.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\n/**\n * `true` if we're building for google3 with temporary back-compat helpers.\n * This export is not present in prod builds.\n * @internal\n */\nexport const INTERNAL = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  globalThis.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!globalThis.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      globalThis.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\nconst trustedTypes = (globalThis as unknown as Partial<Window>).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d = document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = (v = '') => d.createComment(v);\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions.\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  h: TrustedHTML;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\n/**\n * Internally we can export this interface and change the type of\n * render()'s options.\n */\ninterface InternalRenderOptions extends RenderOptions {\n  /**\n   * An internal-only migration flag\n   * @internal\n   */\n  clearContainerForLit2MigrationOnly?: boolean;\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n * @param value\n * @param container\n * @param options\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // Internal modification: don't clear container to match lit-html 2.0\n    if (\n      INTERNAL &&\n      (options as InternalRenderOptions)?.clearContainerForLit2MigrationOnly ===\n        true\n    ) {\n      let n = container.firstChild;\n      // Clear only up to the `endNode` aka `renderBefore` node.\n      while (n && n !== endNode) {\n        const next = n.nextSibling;\n        n.remove();\n        n = next;\n      }\n    }\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n  null,\n  false\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment comment markers denoting the\n * `ChildPart`s and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string | undefined>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string | undefined> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s +\n          marker +\n          (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // Returned as an array for terseness\n  return [\n    policy !== undefined\n      ? policy.createHTML(htmlResult)\n      : (htmlResult as unknown as TrustedHTML),\n    attrNames,\n  ];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n  /** @internal */\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Reparent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const content = this.el.content;\n      const svgElement = content.firstChild!;\n      svgElement.remove();\n      content.append(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          // We defer removing bound attributes because on IE we might not be\n          // iterating attributes in their template order, and would sometimes\n          // remove an attribute that we still need to create a part for.\n          const attrsToRemove = [];\n          for (const name of (node as Element).getAttributeNames()) {\n            // `name` is the name of the attribute we're iterating over, but not\n            // _neccessarily_ the name of the attribute we will create a part\n            // for. They can be different in browsers that don't iterate on\n            // attributes in source order. In that case the attrNames array\n            // contains the attribute name we'll process next. We only need the\n            // attribute name here to know if we should process a bound attribute\n            // on this element.\n            if (\n              name.endsWith(boundAttributeSuffix) ||\n              name.startsWith(marker)\n            ) {\n              const realName = attrNames[attrNameIndex++];\n              attrsToRemove.push(name);\n              if (realName !== undefined) {\n                // Lowercase for case-sensitive SVG attributes like viewBox\n                const value = (node as Element).getAttribute(\n                  realName.toLowerCase() + boundAttributeSuffix\n                )!;\n                const statics = value.split(marker);\n                const m = /([.?@])?(.*)/.exec(realName)!;\n                parts.push({\n                  type: ATTRIBUTE_PART,\n                  index: nodeIndex,\n                  name: m[2],\n                  strings: statics,\n                  ctor:\n                    m[1] === '.'\n                      ? PropertyPart\n                      : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                      ? EventPart\n                      : AttributePart,\n                });\n              } else {\n                parts.push({\n                  type: ELEMENT_PART,\n                  index: nodeIndex,\n                });\n              }\n            }\n          }\n          for (const name of attrsToRemove) {\n            (node as Element).removeAttribute(name);\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  /** @internal */\n  _$template: Template;\n  /** @internal */\n  _parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  /** @internal */\n  readonly ctor: typeof AttributePart;\n  /** @internal */\n  readonly strings: ReadonlyArray<string>;\n};\ntype NodeTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | NodeTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T, ref = this._$endNode) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(node, ref);\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = document.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its contentx.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(type.h, this.options)),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      instance._update(values);\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was prevously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (value && value !== nothing) {\n      (wrap(this.element) as Element).setAttribute(this.name, '');\n    } else {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    }\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in hydrate\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  // Used in tests and private-ssr-support\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? window.litHtmlPolyfillSupportDevMode\n  : window.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(globalThis.litHtmlVersions ??= []).push('2.0.1');\nif (DEV_MODE && globalThis.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`ReactiveElement`]] and adds lit-html templating.\n * The `ReactiveElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\n// For backwards compatibility export ReactiveElement as UpdatingElement. Note,\n// IE transpilation requires exporting like this.\nexport const UpdatingElement = ReactiveElement;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends ReactiveElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See @lit/reactive-element for more information.\n   */\n  protected static override ['finalized'] = true;\n\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n// DEV mode warnings\nif (DEV_MODE) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  // Note, for compatibility with closure compilation, this access\n  // needs to be as a string property index.\n  (LitElement as any)['finalize'] = function (this: typeof LitElement) {\n    const finalized = (ReactiveElement as any).finalize.call(this);\n    if (!finalized) {\n      return false;\n    }\n    const warnRemovedOrRenamed = (obj: any, name: string, renamed = false) => {\n      if (obj.hasOwnProperty(name)) {\n        const ctorName = (typeof obj === 'function' ? obj : obj.constructor)\n          .name;\n        issueWarning(\n          renamed ? 'renamed-api' : 'removed-api',\n          `\\`${name}\\` is implemented on class ${ctorName}. It ` +\n            `has been ${renamed ? 'renamed' : 'removed'} ` +\n            `in this version of LitElement.`\n        );\n      }\n    };\n    warnRemovedOrRenamed(this, 'render');\n    warnRemovedOrRenamed(this, 'getStyles', true);\n    warnRemovedOrRenamed(this.prototype, 'adoptStyles');\n    return true;\n  };\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('3.0.1');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "import { html, css, LitElement } from 'lit';\nimport LiveSocket from './live_socket';\nimport { Socket } from 'phoenix';\nimport View from './view';\n\nlet serializeForm = (form, meta = {}) => {\n  let formData = new FormData(form)\n  let toRemove = []\n\n  formData.forEach((val, key, _index) => {\n    if (val instanceof File) { toRemove.push(key) }\n  })\n\n  // Cleanup after building fileData\n  toRemove.forEach(key => formData.delete(key))\n\n  let params = new URLSearchParams()\n  for (let [key, val] of formData.entries()) { params.append(key, val) }\n  for (let metaKey in meta) { params.append(metaKey, meta[metaKey]) }\n\n  return params.toString()\n}\n\nclass LiveElement extends LitElement {\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n        padding: 25px;\n        color: var(--live-element-text-color, #000);\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      title: { type: String },\n      counter: { type: Number },\n      module: { type: String},\n      url: {type: String}\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    //\n    // view.setHref(this.liveSocket.getHref())\n    // view.join()\n    this.liveSocket = new LiveSocket(this.url, Socket, {})\n    this.liveSocket.enableDebug();\n    this.liveSocket.socket.connect();\n    this.view = new View(this, this.liveSocket, null, null);\n    this.liveSocket.roots[this.view.id] = this.view;\n    this.view.channel = this.liveSocket.channel(`lve:${this.id}`, () => {\n      return {\n        params: {module: this.module},\n        session: {}\n      }\n    })\n    this.view.setHref(this.liveSocket.getHref())\n    this.view.join();\n  }\n\n  constructor() {\n    super();\n\n    // this.addEventListener('submit', (event) => {\n    //   console.log(event);\n    //   event.preventDefault();\n    //   let phxEvent = event.target.getAttribute(\"phx-submit\")\n    //   if (!phxEvent) { return }\n    //   event.preventDefault()\n    //   event.target.disabled = true;\n    //   this.view.submitForm(event.target, this, phxEvent);\n    // }, true);\n  }\n\n  firstUpdated() {\n    this.renderRoot.addEventListener(\"click\", (event) => {\n      console.log(event);\n      const { target } = event;\n      let phxEvent = target && target.getAttribute(\"phx-click\")\n      if (!phxEvent) { return }\n      this.view.pushEvent(\"click\", this, this, phxEvent, {});\n    }, true);\n    this.renderRoot.addEventListener(\"submit\", (event) => {\n      console.log(event);\n      const { target } = event;\n      event.preventDefault();\n      let phxEvent = event.target.getAttribute(\"phx-submit\")\n      if (!phxEvent) { return }\n      // event.target.disabled = true;\n      this.view.submitForm(event.target, this.renderRoot, phxEvent);\n    }, true);\n  }\n  viewUpdated() {\n    console.log('view updated');\n    // Array.from(this.renderRoot.querySelectorAll(\"form\")).forEach((form) => form.addEventListener('submit', (event) => {\n    //   console.log(event);\n    //   event.preventDefault();\n    //   let phxEvent = event.target.getAttribute(\"phx-submit\")\n    //   if (!phxEvent) { return }\n    //   // event.target.disabled = true;\n    //   this.view.submitForm(form, this.renderRoot, phxEvent);\n    // }));\n  }\n  __increment() {\n    this.counter += 1;\n  }\n\n  // createRenderRoot() {return this;}\n}\n\nexport default LiveElement"],
  "mappings": "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",
  "names": []
}
